// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Matrix_Addition.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Matrix_Addition::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Matrix_Addition::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> Matrix_Addition::ap_ST_fsm_state1 = "1";
const sc_lv<10> Matrix_Addition::ap_ST_fsm_state2 = "10";
const sc_lv<10> Matrix_Addition::ap_ST_fsm_state3 = "100";
const sc_lv<10> Matrix_Addition::ap_ST_fsm_state4 = "1000";
const sc_lv<10> Matrix_Addition::ap_ST_fsm_state5 = "10000";
const sc_lv<10> Matrix_Addition::ap_ST_fsm_state6 = "100000";
const sc_lv<10> Matrix_Addition::ap_ST_fsm_state7 = "1000000";
const sc_lv<10> Matrix_Addition::ap_ST_fsm_state8 = "10000000";
const sc_lv<10> Matrix_Addition::ap_ST_fsm_state9 = "100000000";
const sc_lv<10> Matrix_Addition::ap_ST_fsm_state10 = "1000000000";
const sc_lv<32> Matrix_Addition::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> Matrix_Addition::ap_const_lv1_1 = "1";
const int Matrix_Addition::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> Matrix_Addition::ap_const_lv32_1 = "1";
const sc_lv<1> Matrix_Addition::ap_const_lv1_0 = "0";
const sc_lv<32> Matrix_Addition::ap_const_lv32_2 = "10";
const sc_lv<32> Matrix_Addition::ap_const_lv32_3 = "11";
const sc_lv<32> Matrix_Addition::ap_const_lv32_4 = "100";
const sc_lv<32> Matrix_Addition::ap_const_lv32_6 = "110";
const sc_lv<32> Matrix_Addition::ap_const_lv32_7 = "111";
const sc_lv<32> Matrix_Addition::ap_const_lv32_8 = "1000";
const sc_lv<32> Matrix_Addition::ap_const_lv32_9 = "1001";
const sc_lv<2> Matrix_Addition::ap_const_lv2_0 = "00";
const sc_lv<3> Matrix_Addition::ap_const_lv3_0 = "000";
const sc_lv<32> Matrix_Addition::ap_const_lv32_5 = "101";
const sc_lv<3> Matrix_Addition::ap_const_lv3_2 = "10";
const sc_lv<4> Matrix_Addition::ap_const_lv4_0 = "0000";
const sc_lv<4> Matrix_Addition::ap_const_lv4_F = "1111";
const sc_lv<2> Matrix_Addition::ap_const_lv2_2 = "10";
const sc_lv<2> Matrix_Addition::ap_const_lv2_1 = "1";
const sc_lv<3> Matrix_Addition::ap_const_lv3_1 = "1";

Matrix_Addition::Matrix_Addition(sc_module_name name) : sc_module(name), mVcdFile(0) {
    Matrix_Addition_CRTL_BUS_s_axi_U = new Matrix_Addition_CRTL_BUS_s_axi<C_S_AXI_CRTL_BUS_ADDR_WIDTH,C_S_AXI_CRTL_BUS_DATA_WIDTH>("Matrix_Addition_CRTL_BUS_s_axi_U");
    Matrix_Addition_CRTL_BUS_s_axi_U->AWVALID(s_axi_CRTL_BUS_AWVALID);
    Matrix_Addition_CRTL_BUS_s_axi_U->AWREADY(s_axi_CRTL_BUS_AWREADY);
    Matrix_Addition_CRTL_BUS_s_axi_U->AWADDR(s_axi_CRTL_BUS_AWADDR);
    Matrix_Addition_CRTL_BUS_s_axi_U->WVALID(s_axi_CRTL_BUS_WVALID);
    Matrix_Addition_CRTL_BUS_s_axi_U->WREADY(s_axi_CRTL_BUS_WREADY);
    Matrix_Addition_CRTL_BUS_s_axi_U->WDATA(s_axi_CRTL_BUS_WDATA);
    Matrix_Addition_CRTL_BUS_s_axi_U->WSTRB(s_axi_CRTL_BUS_WSTRB);
    Matrix_Addition_CRTL_BUS_s_axi_U->ARVALID(s_axi_CRTL_BUS_ARVALID);
    Matrix_Addition_CRTL_BUS_s_axi_U->ARREADY(s_axi_CRTL_BUS_ARREADY);
    Matrix_Addition_CRTL_BUS_s_axi_U->ARADDR(s_axi_CRTL_BUS_ARADDR);
    Matrix_Addition_CRTL_BUS_s_axi_U->RVALID(s_axi_CRTL_BUS_RVALID);
    Matrix_Addition_CRTL_BUS_s_axi_U->RREADY(s_axi_CRTL_BUS_RREADY);
    Matrix_Addition_CRTL_BUS_s_axi_U->RDATA(s_axi_CRTL_BUS_RDATA);
    Matrix_Addition_CRTL_BUS_s_axi_U->RRESP(s_axi_CRTL_BUS_RRESP);
    Matrix_Addition_CRTL_BUS_s_axi_U->BVALID(s_axi_CRTL_BUS_BVALID);
    Matrix_Addition_CRTL_BUS_s_axi_U->BREADY(s_axi_CRTL_BUS_BREADY);
    Matrix_Addition_CRTL_BUS_s_axi_U->BRESP(s_axi_CRTL_BUS_BRESP);
    Matrix_Addition_CRTL_BUS_s_axi_U->ACLK(ap_clk);
    Matrix_Addition_CRTL_BUS_s_axi_U->ARESET(ap_rst_n_inv);
    Matrix_Addition_CRTL_BUS_s_axi_U->ACLK_EN(ap_var_for_const0);
    Matrix_Addition_CRTL_BUS_s_axi_U->ap_start(ap_start);
    Matrix_Addition_CRTL_BUS_s_axi_U->interrupt(interrupt);
    Matrix_Addition_CRTL_BUS_s_axi_U->ap_ready(ap_ready);
    Matrix_Addition_CRTL_BUS_s_axi_U->ap_done(ap_done);
    Matrix_Addition_CRTL_BUS_s_axi_U->ap_idle(ap_idle);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_D1_1_1_1_fu_473_p3);
    sensitive << ( D_Dout_A );
    sensitive << ( tmp_5_reg_941 );
    sensitive << ( D1_1_1_11_fu_72 );

    SC_METHOD(thread_D1_1_1_2_fu_480_p3);
    sensitive << ( D_Dout_A );
    sensitive << ( tmp_5_reg_941 );
    sensitive << ( D1_1_1_10_fu_68 );

    SC_METHOD(thread_D1_1_1_3_fu_494_p3);
    sensitive << ( D_Dout_A );
    sensitive << ( tmp_5_reg_941 );
    sensitive << ( D1_1_1_4_fu_60 );

    SC_METHOD(thread_D1_1_1_5_fu_501_p3);
    sensitive << ( tmp_2_reg_892 );
    sensitive << ( D1_1_1_11_fu_72 );
    sensitive << ( D1_1_1_1_fu_473_p3 );

    SC_METHOD(thread_D1_1_1_6_fu_508_p3);
    sensitive << ( tmp_2_reg_892 );
    sensitive << ( D1_1_1_10_fu_68 );
    sensitive << ( D1_1_1_2_fu_480_p3 );

    SC_METHOD(thread_D1_1_1_7_fu_515_p3);
    sensitive << ( tmp_2_reg_892 );
    sensitive << ( D1_1_1_9_fu_64 );
    sensitive << ( D1_1_1_fu_487_p3 );

    SC_METHOD(thread_D1_1_1_8_fu_522_p3);
    sensitive << ( tmp_2_reg_892 );
    sensitive << ( D1_1_1_4_fu_60 );
    sensitive << ( D1_1_1_3_fu_494_p3 );

    SC_METHOD(thread_D1_1_1_fu_487_p3);
    sensitive << ( D_Dout_A );
    sensitive << ( tmp_5_reg_941 );
    sensitive << ( D1_1_1_9_fu_64 );

    SC_METHOD(thread_D_Addr_A);
    sensitive << ( k_1_cast1_fu_458_p1 );

    SC_METHOD(thread_D_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_D_Din_A);

    SC_METHOD(thread_D_EN_A);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_D_Rst_A);
    sensitive << ( ap_rst_n_inv );

    SC_METHOD(thread_D_WEN_A);

    SC_METHOD(thread_E1_0_0_2_fu_381_p3);
    sensitive << ( tmp_1_reg_839 );
    sensitive << ( E1_fu_44 );
    sensitive << ( E1_0_0_7_fu_352_p3 );

    SC_METHOD(thread_E1_0_0_7_fu_352_p3);
    sensitive << ( E1_fu_44 );
    sensitive << ( tmp_3_fu_324_p1 );

    SC_METHOD(thread_E1_0_1_2_fu_374_p3);
    sensitive << ( tmp_1_reg_839 );
    sensitive << ( E1_0_1_fu_48 );
    sensitive << ( E1_0_1_7_fu_344_p3 );

    SC_METHOD(thread_E1_0_1_7_fu_344_p3);
    sensitive << ( E1_0_1_fu_48 );
    sensitive << ( tmp_3_fu_324_p1 );

    SC_METHOD(thread_E1_1_0_2_fu_367_p3);
    sensitive << ( tmp_1_reg_839 );
    sensitive << ( E1_1_fu_52 );
    sensitive << ( E1_1_0_7_fu_336_p3 );

    SC_METHOD(thread_E1_1_0_7_fu_336_p3);
    sensitive << ( E1_1_fu_52 );
    sensitive << ( tmp_3_fu_324_p1 );

    SC_METHOD(thread_E1_1_0_fu_620_p3);
    sensitive << ( tmp_15_fu_613_p3 );

    SC_METHOD(thread_E1_1_1_12_fu_644_p3);
    sensitive << ( E1_1_1_9_fu_80 );
    sensitive << ( tmp_8_fu_577_p1 );
    sensitive << ( E1_1_0_fu_620_p3 );

    SC_METHOD(thread_E1_1_1_1_fu_628_p3);
    sensitive << ( E1_1_1_11_fu_88 );
    sensitive << ( tmp_8_fu_577_p1 );
    sensitive << ( E1_1_0_fu_620_p3 );

    SC_METHOD(thread_E1_1_1_2_11_fu_636_p3);
    sensitive << ( E1_1_1_10_fu_84 );
    sensitive << ( tmp_8_fu_577_p1 );
    sensitive << ( E1_1_0_fu_620_p3 );

    SC_METHOD(thread_E1_1_1_2_fu_360_p3);
    sensitive << ( tmp_1_reg_839 );
    sensitive << ( E1_1_1_fu_56 );
    sensitive << ( E1_1_1_7_fu_328_p3 );

    SC_METHOD(thread_E1_1_1_3_fu_652_p3);
    sensitive << ( E1_1_1_4_fu_76 );
    sensitive << ( tmp_8_fu_577_p1 );
    sensitive << ( E1_1_0_fu_620_p3 );

    SC_METHOD(thread_E1_1_1_5_fu_660_p3);
    sensitive << ( tmp_4_reg_962 );
    sensitive << ( E1_1_1_11_fu_88 );
    sensitive << ( E1_1_1_1_fu_628_p3 );

    SC_METHOD(thread_E1_1_1_6_fu_667_p3);
    sensitive << ( tmp_4_reg_962 );
    sensitive << ( E1_1_1_10_fu_84 );
    sensitive << ( E1_1_1_2_11_fu_636_p3 );

    SC_METHOD(thread_E1_1_1_7_13_fu_674_p3);
    sensitive << ( tmp_4_reg_962 );
    sensitive << ( E1_1_1_9_fu_80 );
    sensitive << ( E1_1_1_12_fu_644_p3 );

    SC_METHOD(thread_E1_1_1_7_fu_328_p3);
    sensitive << ( E1_1_1_fu_56 );
    sensitive << ( tmp_3_fu_324_p1 );

    SC_METHOD(thread_E1_1_1_8_fu_681_p3);
    sensitive << ( tmp_4_reg_962 );
    sensitive << ( E1_1_1_4_fu_76 );
    sensitive << ( E1_1_1_3_fu_652_p3 );

    SC_METHOD(thread_E1_load12_phi_fu_759_p3);
    sensitive << ( E1_1_1_4_fu_76 );
    sensitive << ( E1_1_1_9_fu_80 );
    sensitive << ( tmp_16_fu_747_p1 );

    SC_METHOD(thread_E1_load13_phi_fu_751_p3);
    sensitive << ( E1_1_1_10_fu_84 );
    sensitive << ( E1_1_1_11_fu_88 );
    sensitive << ( tmp_16_fu_747_p1 );

    SC_METHOD(thread_E_Addr_A);
    sensitive << ( k_3_cast4_fu_730_p1 );

    SC_METHOD(thread_E_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_E_Din_A);
    sensitive << ( tmp_6_reg_992 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( E1_load13_phi_fu_751_p3 );
    sensitive << ( E1_load12_phi_fu_759_p3 );

    SC_METHOD(thread_E_EN_A);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_E_Rst_A);
    sensitive << ( ap_rst_n_inv );

    SC_METHOD(thread_E_WEN_A);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( exitcond_fu_735_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond1_fu_708_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond1_fu_708_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_exitcond1_fu_708_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( i7_reg_228 );

    SC_METHOD(thread_exitcond2_fu_565_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( j6_reg_193 );

    SC_METHOD(thread_exitcond3_fu_549_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( i5_reg_182 );

    SC_METHOD(thread_exitcond4_fu_446_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( j4_reg_161 );

    SC_METHOD(thread_exitcond5_fu_408_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i3_reg_138 );

    SC_METHOD(thread_exitcond6_fu_312_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j2_reg_127 );

    SC_METHOD(thread_exitcond7_fu_296_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i1_reg_116 );

    SC_METHOD(thread_exitcond_fu_735_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( indvars_iv_reg_204 );
    sensitive << ( k_3_reg_239 );

    SC_METHOD(thread_i_1_fu_414_p2);
    sensitive << ( i3_reg_138 );

    SC_METHOD(thread_i_2_fu_555_p2);
    sensitive << ( i5_reg_182 );

    SC_METHOD(thread_i_3_fu_714_p2);
    sensitive << ( i7_reg_228 );

    SC_METHOD(thread_i_fu_302_p2);
    sensitive << ( i1_reg_116 );

    SC_METHOD(thread_indvars_iv_next_fu_781_p2);
    sensitive << ( indvars_iv_reg_204 );

    SC_METHOD(thread_j_1_fu_452_p2);
    sensitive << ( j4_reg_161 );

    SC_METHOD(thread_j_2_fu_571_p2);
    sensitive << ( j6_reg_193 );

    SC_METHOD(thread_j_3_fu_741_p2);
    sensitive << ( j8_reg_249 );

    SC_METHOD(thread_j_fu_318_p2);
    sensitive << ( j2_reg_127 );

    SC_METHOD(thread_k_1_cast1_fu_458_p1);
    sensitive << ( k_1_reg_172 );

    SC_METHOD(thread_k_3_cast4_fu_730_p1);
    sensitive << ( k_3_reg_239 );

    SC_METHOD(thread_k_4_fu_420_p2);
    sensitive << ( k_reg_149 );

    SC_METHOD(thread_k_5_fu_720_p2);
    sensitive << ( k_2_reg_216 );

    SC_METHOD(thread_tmp_10_fu_585_p1);
    sensitive << ( D1_1_1_10_fu_68 );

    SC_METHOD(thread_tmp_11_fu_589_p3);
    sensitive << ( tmp_8_fu_577_p1 );
    sensitive << ( tmp_9_fu_581_p1 );
    sensitive << ( tmp_10_fu_585_p1 );

    SC_METHOD(thread_tmp_12_fu_597_p1);
    sensitive << ( D1_1_1_9_fu_64 );

    SC_METHOD(thread_tmp_13_fu_601_p1);
    sensitive << ( D1_1_1_4_fu_60 );

    SC_METHOD(thread_tmp_14_fu_605_p3);
    sensitive << ( tmp_8_fu_577_p1 );
    sensitive << ( tmp_12_fu_597_p1 );
    sensitive << ( tmp_13_fu_601_p1 );

    SC_METHOD(thread_tmp_15_fu_613_p3);
    sensitive << ( tmp_4_reg_962 );
    sensitive << ( tmp_11_fu_589_p3 );
    sensitive << ( tmp_14_fu_605_p3 );

    SC_METHOD(thread_tmp_16_fu_747_p1);
    sensitive << ( j8_reg_249 );

    SC_METHOD(thread_tmp_1_fu_308_p1);
    sensitive << ( i1_reg_116 );

    SC_METHOD(thread_tmp_2_fu_426_p1);
    sensitive << ( i3_reg_138 );

    SC_METHOD(thread_tmp_3_fu_324_p1);
    sensitive << ( j2_reg_127 );

    SC_METHOD(thread_tmp_4_fu_561_p1);
    sensitive << ( i5_reg_182 );

    SC_METHOD(thread_tmp_5_fu_463_p1);
    sensitive << ( j4_reg_161 );

    SC_METHOD(thread_tmp_6_fu_726_p1);
    sensitive << ( i7_reg_228 );

    SC_METHOD(thread_tmp_7_fu_775_p2);
    sensitive << ( k_3_reg_239 );

    SC_METHOD(thread_tmp_8_fu_577_p1);
    sensitive << ( j6_reg_193 );

    SC_METHOD(thread_tmp_9_fu_581_p1);
    sensitive << ( D1_1_1_11_fu_72 );

    SC_METHOD(thread_tmp_fu_467_p2);
    sensitive << ( k_1_reg_172 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond7_fu_296_p2 );
    sensitive << ( exitcond5_fu_408_p2 );
    sensitive << ( exitcond4_fu_446_p2 );
    sensitive << ( exitcond3_fu_549_p2 );
    sensitive << ( exitcond1_fu_708_p2 );
    sensitive << ( exitcond_fu_735_p2 );
    sensitive << ( exitcond6_fu_312_p2 );
    sensitive << ( exitcond2_fu_565_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Matrix_Addition_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, D_Addr_A, "(port)D_Addr_A");
    sc_trace(mVcdFile, D_EN_A, "(port)D_EN_A");
    sc_trace(mVcdFile, D_WEN_A, "(port)D_WEN_A");
    sc_trace(mVcdFile, D_Din_A, "(port)D_Din_A");
    sc_trace(mVcdFile, D_Dout_A, "(port)D_Dout_A");
    sc_trace(mVcdFile, D_Clk_A, "(port)D_Clk_A");
    sc_trace(mVcdFile, D_Rst_A, "(port)D_Rst_A");
    sc_trace(mVcdFile, E_Addr_A, "(port)E_Addr_A");
    sc_trace(mVcdFile, E_EN_A, "(port)E_EN_A");
    sc_trace(mVcdFile, E_WEN_A, "(port)E_WEN_A");
    sc_trace(mVcdFile, E_Din_A, "(port)E_Din_A");
    sc_trace(mVcdFile, E_Dout_A, "(port)E_Dout_A");
    sc_trace(mVcdFile, E_Clk_A, "(port)E_Clk_A");
    sc_trace(mVcdFile, E_Rst_A, "(port)E_Rst_A");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_AWVALID, "(port)s_axi_CRTL_BUS_AWVALID");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_AWREADY, "(port)s_axi_CRTL_BUS_AWREADY");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_AWADDR, "(port)s_axi_CRTL_BUS_AWADDR");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_WVALID, "(port)s_axi_CRTL_BUS_WVALID");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_WREADY, "(port)s_axi_CRTL_BUS_WREADY");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_WDATA, "(port)s_axi_CRTL_BUS_WDATA");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_WSTRB, "(port)s_axi_CRTL_BUS_WSTRB");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_ARVALID, "(port)s_axi_CRTL_BUS_ARVALID");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_ARREADY, "(port)s_axi_CRTL_BUS_ARREADY");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_ARADDR, "(port)s_axi_CRTL_BUS_ARADDR");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_RVALID, "(port)s_axi_CRTL_BUS_RVALID");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_RREADY, "(port)s_axi_CRTL_BUS_RREADY");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_RDATA, "(port)s_axi_CRTL_BUS_RDATA");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_RRESP, "(port)s_axi_CRTL_BUS_RRESP");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_BVALID, "(port)s_axi_CRTL_BUS_BVALID");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_BREADY, "(port)s_axi_CRTL_BUS_BREADY");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_BRESP, "(port)s_axi_CRTL_BUS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, E1_load_reg_811, "E1_load_reg_811");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, E1_0_1_load_reg_816, "E1_0_1_load_reg_816");
    sc_trace(mVcdFile, E1_1_load_reg_821, "E1_1_load_reg_821");
    sc_trace(mVcdFile, E1_1_1_load_reg_826, "E1_1_1_load_reg_826");
    sc_trace(mVcdFile, i_fu_302_p2, "i_fu_302_p2");
    sc_trace(mVcdFile, i_reg_834, "i_reg_834");
    sc_trace(mVcdFile, tmp_1_fu_308_p1, "tmp_1_fu_308_p1");
    sc_trace(mVcdFile, tmp_1_reg_839, "tmp_1_reg_839");
    sc_trace(mVcdFile, exitcond7_fu_296_p2, "exitcond7_fu_296_p2");
    sc_trace(mVcdFile, j_fu_318_p2, "j_fu_318_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_1_fu_414_p2, "i_1_fu_414_p2");
    sc_trace(mVcdFile, i_1_reg_882, "i_1_reg_882");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, k_4_fu_420_p2, "k_4_fu_420_p2");
    sc_trace(mVcdFile, k_4_reg_887, "k_4_reg_887");
    sc_trace(mVcdFile, exitcond5_fu_408_p2, "exitcond5_fu_408_p2");
    sc_trace(mVcdFile, tmp_2_fu_426_p1, "tmp_2_fu_426_p1");
    sc_trace(mVcdFile, tmp_2_reg_892, "tmp_2_reg_892");
    sc_trace(mVcdFile, j_1_fu_452_p2, "j_1_fu_452_p2");
    sc_trace(mVcdFile, j_1_reg_931, "j_1_reg_931");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, exitcond4_fu_446_p2, "exitcond4_fu_446_p2");
    sc_trace(mVcdFile, tmp_5_fu_463_p1, "tmp_5_fu_463_p1");
    sc_trace(mVcdFile, tmp_5_reg_941, "tmp_5_reg_941");
    sc_trace(mVcdFile, tmp_fu_467_p2, "tmp_fu_467_p2");
    sc_trace(mVcdFile, tmp_reg_949, "tmp_reg_949");
    sc_trace(mVcdFile, i_2_fu_555_p2, "i_2_fu_555_p2");
    sc_trace(mVcdFile, i_2_reg_957, "i_2_reg_957");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_4_fu_561_p1, "tmp_4_fu_561_p1");
    sc_trace(mVcdFile, tmp_4_reg_962, "tmp_4_reg_962");
    sc_trace(mVcdFile, exitcond3_fu_549_p2, "exitcond3_fu_549_p2");
    sc_trace(mVcdFile, j_2_fu_571_p2, "j_2_fu_571_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, i_3_fu_714_p2, "i_3_fu_714_p2");
    sc_trace(mVcdFile, i_3_reg_982, "i_3_reg_982");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, k_5_fu_720_p2, "k_5_fu_720_p2");
    sc_trace(mVcdFile, k_5_reg_987, "k_5_reg_987");
    sc_trace(mVcdFile, exitcond1_fu_708_p2, "exitcond1_fu_708_p2");
    sc_trace(mVcdFile, tmp_6_fu_726_p1, "tmp_6_fu_726_p1");
    sc_trace(mVcdFile, tmp_6_reg_992, "tmp_6_reg_992");
    sc_trace(mVcdFile, j_3_fu_741_p2, "j_3_fu_741_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_7_fu_775_p2, "tmp_7_fu_775_p2");
    sc_trace(mVcdFile, exitcond_fu_735_p2, "exitcond_fu_735_p2");
    sc_trace(mVcdFile, indvars_iv_next_fu_781_p2, "indvars_iv_next_fu_781_p2");
    sc_trace(mVcdFile, i1_reg_116, "i1_reg_116");
    sc_trace(mVcdFile, exitcond6_fu_312_p2, "exitcond6_fu_312_p2");
    sc_trace(mVcdFile, j2_reg_127, "j2_reg_127");
    sc_trace(mVcdFile, i3_reg_138, "i3_reg_138");
    sc_trace(mVcdFile, k_reg_149, "k_reg_149");
    sc_trace(mVcdFile, j4_reg_161, "j4_reg_161");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, k_1_reg_172, "k_1_reg_172");
    sc_trace(mVcdFile, i5_reg_182, "i5_reg_182");
    sc_trace(mVcdFile, exitcond2_fu_565_p2, "exitcond2_fu_565_p2");
    sc_trace(mVcdFile, j6_reg_193, "j6_reg_193");
    sc_trace(mVcdFile, indvars_iv_reg_204, "indvars_iv_reg_204");
    sc_trace(mVcdFile, k_2_reg_216, "k_2_reg_216");
    sc_trace(mVcdFile, i7_reg_228, "i7_reg_228");
    sc_trace(mVcdFile, k_3_reg_239, "k_3_reg_239");
    sc_trace(mVcdFile, j8_reg_249, "j8_reg_249");
    sc_trace(mVcdFile, k_1_cast1_fu_458_p1, "k_1_cast1_fu_458_p1");
    sc_trace(mVcdFile, k_3_cast4_fu_730_p1, "k_3_cast4_fu_730_p1");
    sc_trace(mVcdFile, E1_fu_44, "E1_fu_44");
    sc_trace(mVcdFile, E1_0_0_2_fu_381_p3, "E1_0_0_2_fu_381_p3");
    sc_trace(mVcdFile, E1_0_1_fu_48, "E1_0_1_fu_48");
    sc_trace(mVcdFile, E1_0_1_2_fu_374_p3, "E1_0_1_2_fu_374_p3");
    sc_trace(mVcdFile, E1_1_fu_52, "E1_1_fu_52");
    sc_trace(mVcdFile, E1_1_0_2_fu_367_p3, "E1_1_0_2_fu_367_p3");
    sc_trace(mVcdFile, E1_1_1_fu_56, "E1_1_1_fu_56");
    sc_trace(mVcdFile, E1_1_1_2_fu_360_p3, "E1_1_1_2_fu_360_p3");
    sc_trace(mVcdFile, D1_1_1_4_fu_60, "D1_1_1_4_fu_60");
    sc_trace(mVcdFile, D1_1_1_8_fu_522_p3, "D1_1_1_8_fu_522_p3");
    sc_trace(mVcdFile, D1_1_1_9_fu_64, "D1_1_1_9_fu_64");
    sc_trace(mVcdFile, D1_1_1_7_fu_515_p3, "D1_1_1_7_fu_515_p3");
    sc_trace(mVcdFile, D1_1_1_10_fu_68, "D1_1_1_10_fu_68");
    sc_trace(mVcdFile, D1_1_1_6_fu_508_p3, "D1_1_1_6_fu_508_p3");
    sc_trace(mVcdFile, D1_1_1_11_fu_72, "D1_1_1_11_fu_72");
    sc_trace(mVcdFile, D1_1_1_5_fu_501_p3, "D1_1_1_5_fu_501_p3");
    sc_trace(mVcdFile, E1_1_1_4_fu_76, "E1_1_1_4_fu_76");
    sc_trace(mVcdFile, E1_1_1_8_fu_681_p3, "E1_1_1_8_fu_681_p3");
    sc_trace(mVcdFile, E1_1_1_9_fu_80, "E1_1_1_9_fu_80");
    sc_trace(mVcdFile, E1_1_1_7_13_fu_674_p3, "E1_1_1_7_13_fu_674_p3");
    sc_trace(mVcdFile, E1_1_1_10_fu_84, "E1_1_1_10_fu_84");
    sc_trace(mVcdFile, E1_1_1_6_fu_667_p3, "E1_1_1_6_fu_667_p3");
    sc_trace(mVcdFile, E1_1_1_11_fu_88, "E1_1_1_11_fu_88");
    sc_trace(mVcdFile, E1_1_1_5_fu_660_p3, "E1_1_1_5_fu_660_p3");
    sc_trace(mVcdFile, tmp_3_fu_324_p1, "tmp_3_fu_324_p1");
    sc_trace(mVcdFile, E1_1_1_7_fu_328_p3, "E1_1_1_7_fu_328_p3");
    sc_trace(mVcdFile, E1_1_0_7_fu_336_p3, "E1_1_0_7_fu_336_p3");
    sc_trace(mVcdFile, E1_0_1_7_fu_344_p3, "E1_0_1_7_fu_344_p3");
    sc_trace(mVcdFile, E1_0_0_7_fu_352_p3, "E1_0_0_7_fu_352_p3");
    sc_trace(mVcdFile, D1_1_1_1_fu_473_p3, "D1_1_1_1_fu_473_p3");
    sc_trace(mVcdFile, D1_1_1_2_fu_480_p3, "D1_1_1_2_fu_480_p3");
    sc_trace(mVcdFile, D1_1_1_fu_487_p3, "D1_1_1_fu_487_p3");
    sc_trace(mVcdFile, D1_1_1_3_fu_494_p3, "D1_1_1_3_fu_494_p3");
    sc_trace(mVcdFile, tmp_8_fu_577_p1, "tmp_8_fu_577_p1");
    sc_trace(mVcdFile, tmp_9_fu_581_p1, "tmp_9_fu_581_p1");
    sc_trace(mVcdFile, tmp_10_fu_585_p1, "tmp_10_fu_585_p1");
    sc_trace(mVcdFile, tmp_12_fu_597_p1, "tmp_12_fu_597_p1");
    sc_trace(mVcdFile, tmp_13_fu_601_p1, "tmp_13_fu_601_p1");
    sc_trace(mVcdFile, tmp_11_fu_589_p3, "tmp_11_fu_589_p3");
    sc_trace(mVcdFile, tmp_14_fu_605_p3, "tmp_14_fu_605_p3");
    sc_trace(mVcdFile, tmp_15_fu_613_p3, "tmp_15_fu_613_p3");
    sc_trace(mVcdFile, E1_1_0_fu_620_p3, "E1_1_0_fu_620_p3");
    sc_trace(mVcdFile, E1_1_1_1_fu_628_p3, "E1_1_1_1_fu_628_p3");
    sc_trace(mVcdFile, E1_1_1_2_11_fu_636_p3, "E1_1_1_2_11_fu_636_p3");
    sc_trace(mVcdFile, E1_1_1_12_fu_644_p3, "E1_1_1_12_fu_644_p3");
    sc_trace(mVcdFile, E1_1_1_3_fu_652_p3, "E1_1_1_3_fu_652_p3");
    sc_trace(mVcdFile, tmp_16_fu_747_p1, "tmp_16_fu_747_p1");
    sc_trace(mVcdFile, E1_load13_phi_fu_751_p3, "E1_load13_phi_fu_751_p3");
    sc_trace(mVcdFile, E1_load12_phi_fu_759_p3, "E1_load12_phi_fu_759_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("Matrix_Addition.hdltvin.dat");
    mHdltvoutHandle.open("Matrix_Addition.hdltvout.dat");
}

Matrix_Addition::~Matrix_Addition() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete Matrix_Addition_CRTL_BUS_s_axi_U;
}

void Matrix_Addition::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void Matrix_Addition::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_565_p2.read()))) {
        E1_1_1_10_fu_84 = E1_1_1_6_fu_667_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_408_p2.read()))) {
        E1_1_1_10_fu_84 = E1_1_load_reg_821.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_565_p2.read()))) {
        E1_1_1_11_fu_88 = E1_1_1_5_fu_660_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_408_p2.read()))) {
        E1_1_1_11_fu_88 = E1_1_1_load_reg_826.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_565_p2.read()))) {
        E1_1_1_4_fu_76 = E1_1_1_8_fu_681_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_408_p2.read()))) {
        E1_1_1_4_fu_76 = E1_load_reg_811.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_565_p2.read()))) {
        E1_1_1_9_fu_80 = E1_1_1_7_13_fu_674_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_408_p2.read()))) {
        E1_1_1_9_fu_80 = E1_0_1_load_reg_816.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_312_p2.read()))) {
        i1_reg_116 = i_reg_834.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i1_reg_116 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_446_p2.read()))) {
        i3_reg_138 = i_1_reg_882.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
                !esl_seteq<1,1,1>(exitcond7_fu_296_p2.read(), ap_const_lv1_0))) {
        i3_reg_138 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_565_p2.read()))) {
        i5_reg_182 = i_2_reg_957.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_408_p2.read()))) {
        i5_reg_182 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_549_p2.read()))) {
        i7_reg_228 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_735_p2.read()))) {
        i7_reg_228 = i_3_reg_982.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_549_p2.read()))) {
        indvars_iv_reg_204 = ap_const_lv3_2;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_735_p2.read()))) {
        indvars_iv_reg_204 = indvars_iv_next_fu_781_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond7_fu_296_p2.read(), ap_const_lv1_0))) {
        j2_reg_127 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_312_p2.read()))) {
        j2_reg_127 = j_fu_318_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()))) {
        j4_reg_161 = j_1_reg_931.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_408_p2.read()))) {
        j4_reg_161 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_549_p2.read()))) {
        j6_reg_193 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_565_p2.read()))) {
        j6_reg_193 = j_2_fu_571_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_735_p2.read()))) {
        j8_reg_249 = j_3_fu_741_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_708_p2.read()))) {
        j8_reg_249 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()))) {
        k_1_reg_172 = tmp_reg_949.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_408_p2.read()))) {
        k_1_reg_172 = k_reg_149.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_549_p2.read()))) {
        k_2_reg_216 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_735_p2.read()))) {
        k_2_reg_216 = k_5_reg_987.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_735_p2.read()))) {
        k_3_reg_239 = tmp_7_fu_775_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_708_p2.read()))) {
        k_3_reg_239 = k_2_reg_216.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_446_p2.read()))) {
        k_reg_149 = k_4_reg_887.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
                !esl_seteq<1,1,1>(exitcond7_fu_296_p2.read(), ap_const_lv1_0))) {
        k_reg_149 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()))) {
        D1_1_1_10_fu_68 = D1_1_1_6_fu_508_p3.read();
        D1_1_1_11_fu_72 = D1_1_1_5_fu_501_p3.read();
        D1_1_1_4_fu_60 = D1_1_1_8_fu_522_p3.read();
        D1_1_1_9_fu_64 = D1_1_1_7_fu_515_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_312_p2.read()))) {
        E1_0_1_fu_48 = E1_0_1_2_fu_374_p3.read();
        E1_1_1_fu_56 = E1_1_1_2_fu_360_p3.read();
        E1_1_fu_52 = E1_1_0_2_fu_367_p3.read();
        E1_fu_44 = E1_0_0_2_fu_381_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()))) {
        E1_0_1_load_reg_816 = E1_0_1_fu_48.read();
        E1_1_1_load_reg_826 = E1_1_1_fu_56.read();
        E1_1_load_reg_821 = E1_1_fu_52.read();
        E1_load_reg_811 = E1_fu_44.read();
        i_reg_834 = i_fu_302_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        i_1_reg_882 = i_1_fu_414_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        i_2_reg_957 = i_2_fu_555_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        i_3_reg_982 = i_3_fu_714_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        j_1_reg_931 = j_1_fu_452_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_408_p2.read()))) {
        k_4_reg_887 = k_4_fu_420_p2.read();
        tmp_2_reg_892 = tmp_2_fu_426_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_708_p2.read()))) {
        k_5_reg_987 = k_5_fu_720_p2.read();
        tmp_6_reg_992 = tmp_6_fu_726_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond7_fu_296_p2.read(), ap_const_lv1_0))) {
        tmp_1_reg_839 = tmp_1_fu_308_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_549_p2.read()))) {
        tmp_4_reg_962 = tmp_4_fu_561_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_446_p2.read()))) {
        tmp_5_reg_941 = tmp_5_fu_463_p1.read();
        tmp_reg_949 = tmp_fu_467_p2.read();
    }
}

void Matrix_Addition::thread_D1_1_1_1_fu_473_p3() {
    D1_1_1_1_fu_473_p3 = (!tmp_5_reg_941.read()[0].is_01())? sc_lv<32>(): ((tmp_5_reg_941.read()[0].to_bool())? D_Dout_A.read(): D1_1_1_11_fu_72.read());
}

void Matrix_Addition::thread_D1_1_1_2_fu_480_p3() {
    D1_1_1_2_fu_480_p3 = (!tmp_5_reg_941.read()[0].is_01())? sc_lv<32>(): ((tmp_5_reg_941.read()[0].to_bool())? D1_1_1_10_fu_68.read(): D_Dout_A.read());
}

void Matrix_Addition::thread_D1_1_1_3_fu_494_p3() {
    D1_1_1_3_fu_494_p3 = (!tmp_5_reg_941.read()[0].is_01())? sc_lv<32>(): ((tmp_5_reg_941.read()[0].to_bool())? D1_1_1_4_fu_60.read(): D_Dout_A.read());
}

void Matrix_Addition::thread_D1_1_1_5_fu_501_p3() {
    D1_1_1_5_fu_501_p3 = (!tmp_2_reg_892.read()[0].is_01())? sc_lv<32>(): ((tmp_2_reg_892.read()[0].to_bool())? D1_1_1_1_fu_473_p3.read(): D1_1_1_11_fu_72.read());
}

void Matrix_Addition::thread_D1_1_1_6_fu_508_p3() {
    D1_1_1_6_fu_508_p3 = (!tmp_2_reg_892.read()[0].is_01())? sc_lv<32>(): ((tmp_2_reg_892.read()[0].to_bool())? D1_1_1_2_fu_480_p3.read(): D1_1_1_10_fu_68.read());
}

void Matrix_Addition::thread_D1_1_1_7_fu_515_p3() {
    D1_1_1_7_fu_515_p3 = (!tmp_2_reg_892.read()[0].is_01())? sc_lv<32>(): ((tmp_2_reg_892.read()[0].to_bool())? D1_1_1_9_fu_64.read(): D1_1_1_fu_487_p3.read());
}

void Matrix_Addition::thread_D1_1_1_8_fu_522_p3() {
    D1_1_1_8_fu_522_p3 = (!tmp_2_reg_892.read()[0].is_01())? sc_lv<32>(): ((tmp_2_reg_892.read()[0].to_bool())? D1_1_1_4_fu_60.read(): D1_1_1_3_fu_494_p3.read());
}

void Matrix_Addition::thread_D1_1_1_fu_487_p3() {
    D1_1_1_fu_487_p3 = (!tmp_5_reg_941.read()[0].is_01())? sc_lv<32>(): ((tmp_5_reg_941.read()[0].to_bool())? D_Dout_A.read(): D1_1_1_9_fu_64.read());
}

void Matrix_Addition::thread_D_Addr_A() {
    D_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): k_1_cast1_fu_458_p1.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void Matrix_Addition::thread_D_Clk_A() {
    D_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void Matrix_Addition::thread_D_Din_A() {
    D_Din_A = ap_const_lv32_0;
}

void Matrix_Addition::thread_D_EN_A() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        D_EN_A = ap_const_logic_1;
    } else {
        D_EN_A = ap_const_logic_0;
    }
}

void Matrix_Addition::thread_D_Rst_A() {
    D_Rst_A = ap_rst_n_inv.read();
}

void Matrix_Addition::thread_D_WEN_A() {
    D_WEN_A = ap_const_lv4_0;
}

void Matrix_Addition::thread_E1_0_0_2_fu_381_p3() {
    E1_0_0_2_fu_381_p3 = (!tmp_1_reg_839.read()[0].is_01())? sc_lv<32>(): ((tmp_1_reg_839.read()[0].to_bool())? E1_fu_44.read(): E1_0_0_7_fu_352_p3.read());
}

void Matrix_Addition::thread_E1_0_0_7_fu_352_p3() {
    E1_0_0_7_fu_352_p3 = (!tmp_3_fu_324_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_3_fu_324_p1.read()[0].to_bool())? E1_fu_44.read(): ap_const_lv32_0);
}

void Matrix_Addition::thread_E1_0_1_2_fu_374_p3() {
    E1_0_1_2_fu_374_p3 = (!tmp_1_reg_839.read()[0].is_01())? sc_lv<32>(): ((tmp_1_reg_839.read()[0].to_bool())? E1_0_1_fu_48.read(): E1_0_1_7_fu_344_p3.read());
}

void Matrix_Addition::thread_E1_0_1_7_fu_344_p3() {
    E1_0_1_7_fu_344_p3 = (!tmp_3_fu_324_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_3_fu_324_p1.read()[0].to_bool())? ap_const_lv32_0: E1_0_1_fu_48.read());
}

void Matrix_Addition::thread_E1_1_0_2_fu_367_p3() {
    E1_1_0_2_fu_367_p3 = (!tmp_1_reg_839.read()[0].is_01())? sc_lv<32>(): ((tmp_1_reg_839.read()[0].to_bool())? E1_1_0_7_fu_336_p3.read(): E1_1_fu_52.read());
}

void Matrix_Addition::thread_E1_1_0_7_fu_336_p3() {
    E1_1_0_7_fu_336_p3 = (!tmp_3_fu_324_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_3_fu_324_p1.read()[0].to_bool())? E1_1_fu_52.read(): ap_const_lv32_0);
}

void Matrix_Addition::thread_E1_1_0_fu_620_p3() {
    E1_1_0_fu_620_p3 = esl_concat<31,1>(tmp_15_fu_613_p3.read(), ap_const_lv1_0);
}

void Matrix_Addition::thread_E1_1_1_12_fu_644_p3() {
    E1_1_1_12_fu_644_p3 = (!tmp_8_fu_577_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_8_fu_577_p1.read()[0].to_bool())? E1_1_0_fu_620_p3.read(): E1_1_1_9_fu_80.read());
}

void Matrix_Addition::thread_E1_1_1_1_fu_628_p3() {
    E1_1_1_1_fu_628_p3 = (!tmp_8_fu_577_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_8_fu_577_p1.read()[0].to_bool())? E1_1_0_fu_620_p3.read(): E1_1_1_11_fu_88.read());
}

void Matrix_Addition::thread_E1_1_1_2_11_fu_636_p3() {
    E1_1_1_2_11_fu_636_p3 = (!tmp_8_fu_577_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_8_fu_577_p1.read()[0].to_bool())? E1_1_1_10_fu_84.read(): E1_1_0_fu_620_p3.read());
}

void Matrix_Addition::thread_E1_1_1_2_fu_360_p3() {
    E1_1_1_2_fu_360_p3 = (!tmp_1_reg_839.read()[0].is_01())? sc_lv<32>(): ((tmp_1_reg_839.read()[0].to_bool())? E1_1_1_7_fu_328_p3.read(): E1_1_1_fu_56.read());
}

void Matrix_Addition::thread_E1_1_1_3_fu_652_p3() {
    E1_1_1_3_fu_652_p3 = (!tmp_8_fu_577_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_8_fu_577_p1.read()[0].to_bool())? E1_1_1_4_fu_76.read(): E1_1_0_fu_620_p3.read());
}

void Matrix_Addition::thread_E1_1_1_5_fu_660_p3() {
    E1_1_1_5_fu_660_p3 = (!tmp_4_reg_962.read()[0].is_01())? sc_lv<32>(): ((tmp_4_reg_962.read()[0].to_bool())? E1_1_1_1_fu_628_p3.read(): E1_1_1_11_fu_88.read());
}

void Matrix_Addition::thread_E1_1_1_6_fu_667_p3() {
    E1_1_1_6_fu_667_p3 = (!tmp_4_reg_962.read()[0].is_01())? sc_lv<32>(): ((tmp_4_reg_962.read()[0].to_bool())? E1_1_1_2_11_fu_636_p3.read(): E1_1_1_10_fu_84.read());
}

void Matrix_Addition::thread_E1_1_1_7_13_fu_674_p3() {
    E1_1_1_7_13_fu_674_p3 = (!tmp_4_reg_962.read()[0].is_01())? sc_lv<32>(): ((tmp_4_reg_962.read()[0].to_bool())? E1_1_1_9_fu_80.read(): E1_1_1_12_fu_644_p3.read());
}

void Matrix_Addition::thread_E1_1_1_7_fu_328_p3() {
    E1_1_1_7_fu_328_p3 = (!tmp_3_fu_324_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_3_fu_324_p1.read()[0].to_bool())? ap_const_lv32_0: E1_1_1_fu_56.read());
}

void Matrix_Addition::thread_E1_1_1_8_fu_681_p3() {
    E1_1_1_8_fu_681_p3 = (!tmp_4_reg_962.read()[0].is_01())? sc_lv<32>(): ((tmp_4_reg_962.read()[0].to_bool())? E1_1_1_4_fu_76.read(): E1_1_1_3_fu_652_p3.read());
}

void Matrix_Addition::thread_E1_load12_phi_fu_759_p3() {
    E1_load12_phi_fu_759_p3 = (!tmp_16_fu_747_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_16_fu_747_p1.read()[0].to_bool())? E1_1_1_9_fu_80.read(): E1_1_1_4_fu_76.read());
}

void Matrix_Addition::thread_E1_load13_phi_fu_751_p3() {
    E1_load13_phi_fu_751_p3 = (!tmp_16_fu_747_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_16_fu_747_p1.read()[0].to_bool())? E1_1_1_11_fu_88.read(): E1_1_1_10_fu_84.read());
}

void Matrix_Addition::thread_E_Addr_A() {
    E_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): k_3_cast4_fu_730_p1.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void Matrix_Addition::thread_E_Clk_A() {
    E_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void Matrix_Addition::thread_E_Din_A() {
    E_Din_A = (!tmp_6_reg_992.read()[0].is_01())? sc_lv<32>(): ((tmp_6_reg_992.read()[0].to_bool())? E1_load13_phi_fu_751_p3.read(): E1_load12_phi_fu_759_p3.read());
}

void Matrix_Addition::thread_E_EN_A() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        E_EN_A = ap_const_logic_1;
    } else {
        E_EN_A = ap_const_logic_0;
    }
}

void Matrix_Addition::thread_E_Rst_A() {
    E_Rst_A = ap_rst_n_inv.read();
}

void Matrix_Addition::thread_E_WEN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_735_p2.read())))) {
        E_WEN_A = ap_const_lv4_F;
    } else {
        E_WEN_A = ap_const_lv4_0;
    }
}

void Matrix_Addition::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void Matrix_Addition::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read().range(9, 9);
}

void Matrix_Addition::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read().range(1, 1);
}

void Matrix_Addition::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read().range(2, 2);
}

void Matrix_Addition::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read().range(3, 3);
}

void Matrix_Addition::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read().range(4, 4);
}

void Matrix_Addition::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read().range(5, 5);
}

void Matrix_Addition::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read().range(6, 6);
}

void Matrix_Addition::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read().range(7, 7);
}

void Matrix_Addition::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read().range(8, 8);
}

void Matrix_Addition::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_708_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Matrix_Addition::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Matrix_Addition::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_708_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Matrix_Addition::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void Matrix_Addition::thread_exitcond1_fu_708_p2() {
    exitcond1_fu_708_p2 = (!i7_reg_228.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(i7_reg_228.read() == ap_const_lv2_2);
}

void Matrix_Addition::thread_exitcond2_fu_565_p2() {
    exitcond2_fu_565_p2 = (!j6_reg_193.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(j6_reg_193.read() == ap_const_lv2_2);
}

void Matrix_Addition::thread_exitcond3_fu_549_p2() {
    exitcond3_fu_549_p2 = (!i5_reg_182.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(i5_reg_182.read() == ap_const_lv2_2);
}

void Matrix_Addition::thread_exitcond4_fu_446_p2() {
    exitcond4_fu_446_p2 = (!j4_reg_161.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(j4_reg_161.read() == ap_const_lv2_2);
}

void Matrix_Addition::thread_exitcond5_fu_408_p2() {
    exitcond5_fu_408_p2 = (!i3_reg_138.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(i3_reg_138.read() == ap_const_lv2_2);
}

void Matrix_Addition::thread_exitcond6_fu_312_p2() {
    exitcond6_fu_312_p2 = (!j2_reg_127.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(j2_reg_127.read() == ap_const_lv2_2);
}

void Matrix_Addition::thread_exitcond7_fu_296_p2() {
    exitcond7_fu_296_p2 = (!i1_reg_116.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_116.read() == ap_const_lv2_2);
}

void Matrix_Addition::thread_exitcond_fu_735_p2() {
    exitcond_fu_735_p2 = (!k_3_reg_239.read().is_01() || !indvars_iv_reg_204.read().is_01())? sc_lv<1>(): sc_lv<1>(k_3_reg_239.read() == indvars_iv_reg_204.read());
}

void Matrix_Addition::thread_i_1_fu_414_p2() {
    i_1_fu_414_p2 = (!i3_reg_138.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i3_reg_138.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void Matrix_Addition::thread_i_2_fu_555_p2() {
    i_2_fu_555_p2 = (!i5_reg_182.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i5_reg_182.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void Matrix_Addition::thread_i_3_fu_714_p2() {
    i_3_fu_714_p2 = (!i7_reg_228.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i7_reg_228.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void Matrix_Addition::thread_i_fu_302_p2() {
    i_fu_302_p2 = (!i1_reg_116.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i1_reg_116.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void Matrix_Addition::thread_indvars_iv_next_fu_781_p2() {
    indvars_iv_next_fu_781_p2 = (!indvars_iv_reg_204.read().is_01() || !ap_const_lv3_2.is_01())? sc_lv<3>(): (sc_biguint<3>(indvars_iv_reg_204.read()) + sc_biguint<3>(ap_const_lv3_2));
}

void Matrix_Addition::thread_j_1_fu_452_p2() {
    j_1_fu_452_p2 = (!j4_reg_161.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j4_reg_161.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void Matrix_Addition::thread_j_2_fu_571_p2() {
    j_2_fu_571_p2 = (!j6_reg_193.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j6_reg_193.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void Matrix_Addition::thread_j_3_fu_741_p2() {
    j_3_fu_741_p2 = (!j8_reg_249.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j8_reg_249.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void Matrix_Addition::thread_j_fu_318_p2() {
    j_fu_318_p2 = (!j2_reg_127.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j2_reg_127.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void Matrix_Addition::thread_k_1_cast1_fu_458_p1() {
    k_1_cast1_fu_458_p1 = esl_zext<32,3>(k_1_reg_172.read());
}

void Matrix_Addition::thread_k_3_cast4_fu_730_p1() {
    k_3_cast4_fu_730_p1 = esl_zext<32,3>(k_3_reg_239.read());
}

void Matrix_Addition::thread_k_4_fu_420_p2() {
    k_4_fu_420_p2 = (!ap_const_lv3_2.is_01() || !k_reg_149.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_2) + sc_biguint<3>(k_reg_149.read()));
}

void Matrix_Addition::thread_k_5_fu_720_p2() {
    k_5_fu_720_p2 = (!ap_const_lv3_2.is_01() || !k_2_reg_216.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_2) + sc_biguint<3>(k_2_reg_216.read()));
}

void Matrix_Addition::thread_tmp_10_fu_585_p1() {
    tmp_10_fu_585_p1 = D1_1_1_10_fu_68.read().range(31-1, 0);
}

void Matrix_Addition::thread_tmp_11_fu_589_p3() {
    tmp_11_fu_589_p3 = (!tmp_8_fu_577_p1.read()[0].is_01())? sc_lv<31>(): ((tmp_8_fu_577_p1.read()[0].to_bool())? tmp_9_fu_581_p1.read(): tmp_10_fu_585_p1.read());
}

void Matrix_Addition::thread_tmp_12_fu_597_p1() {
    tmp_12_fu_597_p1 = D1_1_1_9_fu_64.read().range(31-1, 0);
}

void Matrix_Addition::thread_tmp_13_fu_601_p1() {
    tmp_13_fu_601_p1 = D1_1_1_4_fu_60.read().range(31-1, 0);
}

void Matrix_Addition::thread_tmp_14_fu_605_p3() {
    tmp_14_fu_605_p3 = (!tmp_8_fu_577_p1.read()[0].is_01())? sc_lv<31>(): ((tmp_8_fu_577_p1.read()[0].to_bool())? tmp_12_fu_597_p1.read(): tmp_13_fu_601_p1.read());
}

void Matrix_Addition::thread_tmp_15_fu_613_p3() {
    tmp_15_fu_613_p3 = (!tmp_4_reg_962.read()[0].is_01())? sc_lv<31>(): ((tmp_4_reg_962.read()[0].to_bool())? tmp_11_fu_589_p3.read(): tmp_14_fu_605_p3.read());
}

void Matrix_Addition::thread_tmp_16_fu_747_p1() {
    tmp_16_fu_747_p1 = j8_reg_249.read().range(1-1, 0);
}

void Matrix_Addition::thread_tmp_1_fu_308_p1() {
    tmp_1_fu_308_p1 = i1_reg_116.read().range(1-1, 0);
}

void Matrix_Addition::thread_tmp_2_fu_426_p1() {
    tmp_2_fu_426_p1 = i3_reg_138.read().range(1-1, 0);
}

void Matrix_Addition::thread_tmp_3_fu_324_p1() {
    tmp_3_fu_324_p1 = j2_reg_127.read().range(1-1, 0);
}

void Matrix_Addition::thread_tmp_4_fu_561_p1() {
    tmp_4_fu_561_p1 = i5_reg_182.read().range(1-1, 0);
}

void Matrix_Addition::thread_tmp_5_fu_463_p1() {
    tmp_5_fu_463_p1 = j4_reg_161.read().range(1-1, 0);
}

void Matrix_Addition::thread_tmp_6_fu_726_p1() {
    tmp_6_fu_726_p1 = i7_reg_228.read().range(1-1, 0);
}

void Matrix_Addition::thread_tmp_7_fu_775_p2() {
    tmp_7_fu_775_p2 = (!ap_const_lv3_1.is_01() || !k_3_reg_239.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(k_3_reg_239.read()));
}

void Matrix_Addition::thread_tmp_8_fu_577_p1() {
    tmp_8_fu_577_p1 = j6_reg_193.read().range(1-1, 0);
}

void Matrix_Addition::thread_tmp_9_fu_581_p1() {
    tmp_9_fu_581_p1 = D1_1_1_11_fu_72.read().range(31-1, 0);
}

void Matrix_Addition::thread_tmp_fu_467_p2() {
    tmp_fu_467_p2 = (!ap_const_lv3_1.is_01() || !k_1_reg_172.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(k_1_reg_172.read()));
}

void Matrix_Addition::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(exitcond7_fu_296_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_312_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_408_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_446_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 64 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_549_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_565_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_708_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 512 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_735_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXX";
            break;
    }
}

void Matrix_Addition::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"D_Addr_A\" :  \"" << D_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"D_EN_A\" :  \"" << D_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"D_WEN_A\" :  \"" << D_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"D_Din_A\" :  \"" << D_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"D_Dout_A\" :  \"" << D_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"D_Clk_A\" :  \"" << D_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"D_Rst_A\" :  \"" << D_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"E_Addr_A\" :  \"" << E_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"E_EN_A\" :  \"" << E_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"E_WEN_A\" :  \"" << E_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"E_Din_A\" :  \"" << E_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"E_Dout_A\" :  \"" << E_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"E_Clk_A\" :  \"" << E_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"E_Rst_A\" :  \"" << E_Rst_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_AWVALID\" :  \"" << s_axi_CRTL_BUS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_AWREADY\" :  \"" << s_axi_CRTL_BUS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_AWADDR\" :  \"" << s_axi_CRTL_BUS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_WVALID\" :  \"" << s_axi_CRTL_BUS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_WREADY\" :  \"" << s_axi_CRTL_BUS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_WDATA\" :  \"" << s_axi_CRTL_BUS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_WSTRB\" :  \"" << s_axi_CRTL_BUS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_ARVALID\" :  \"" << s_axi_CRTL_BUS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_ARREADY\" :  \"" << s_axi_CRTL_BUS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_ARADDR\" :  \"" << s_axi_CRTL_BUS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_RVALID\" :  \"" << s_axi_CRTL_BUS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_RREADY\" :  \"" << s_axi_CRTL_BUS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_RDATA\" :  \"" << s_axi_CRTL_BUS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_RRESP\" :  \"" << s_axi_CRTL_BUS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_BVALID\" :  \"" << s_axi_CRTL_BUS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_BREADY\" :  \"" << s_axi_CRTL_BUS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_BRESP\" :  \"" << s_axi_CRTL_BUS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

