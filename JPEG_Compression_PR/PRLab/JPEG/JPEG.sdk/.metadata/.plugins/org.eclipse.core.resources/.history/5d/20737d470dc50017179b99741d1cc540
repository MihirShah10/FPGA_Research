/*
 * Empty C++ Application
 */

int trigger_dct(int column_idx, int row_idx)
{

	*(DCT + 130) = 0x0; // Activate Reset
	for(int i = 1000; i >0; i--){;} // 10k original, 1000 gives 13 us delay

	// Inputs to DCT Module
	for(int idx = 0; idx <64; idx ++)
	{
		*(DCT + idx) = sample_block[column_idx + (row_idx*64)][idx];
	}

	*(DCT + 130) = 0x1; // Reactive Reset and start sending input signals
	for(int i = 1000; i >0; i--){;} // 10k original, 1000 gives 13 us delay

	while(!(*(DCT + 129)==1));// Check Valid Signal is active or not

	for(int i = 1000; i >0; i--){;} // 10k original, 1000 gives 13 us delay

	// Sample the Outputs
	//printf("DCT_Data[%d]: ",column_idx + (row_idx*64));
	for(int idx =0; idx<64;idx++)
	{
		dct_data[column_idx + (row_idx*64)][idx]= *(DCT + 64 + idx);
		//printf("0x%x,",dct_data[column_idx + (row_idx*64)][idx]);
	}
	//printf("\n");

	// Saving the DC Value
	dc_value[column_idx + (row_idx*64)]=dct_data[column_idx + (row_idx*64)][0];

	*(DCT + 130) = 0x0; // Activate Reset
	for(int i = 1000; i >0; i--){;} //10k original, 1000 gives 13 us delay

	return 0;
}

int trigger_quantz(int column_idx, int row_idx)
{
	// Reset to Active Low
	for(int i =100; i<0;i--){;} // Wait for 2 us
	*(QUANTZ + 130)= 0x0;

	for(int i=100; i<0;i--){;} // Wait for 2 us
	for(int j=0; j<8; j++)
	{
		for(int i=0;i<8;i++)
		{
			*(QUANTZ + (8*j+i))=  dct_data[column_idx + (row_idx*64)][i*8+j];
		}
	}

	for(int i =100; i<0;i--){;} // Wait for 2 us
	*(QUANTZ + 130)= 0x1; // Reset High to Start the Processing

	while(!(*(QUANTZ + 129)==1)); // Wait for valid signal to be high

	for(int i =100; i<0;i--){;} // Wait for 2 us

	// Sample the Outputs
	//printf("Quantz_Data[%d]: ",column_idx + (row_idx*64));
	for(int idx =0; idx<64;idx++)
	{
		quantz_data[column_idx + (row_idx*64)][idx]= *(QUANTZ + 64 + idx);
		//printf("0x%x,",quantz_data[column_idx + (row_idx*64)][idx]);
	}
	//printf("\n");
	// Saving the DC value
	dc_value[column_idx + (row_idx*64)] = quantz_data[column_idx + (row_idx*64)][0];

	*(QUANTZ + 130)= 0x0;
	for(int i =100; i<0;i--){;} // Wait for 2 us

	return 0;
}




int main()
{
	return 0;
}
