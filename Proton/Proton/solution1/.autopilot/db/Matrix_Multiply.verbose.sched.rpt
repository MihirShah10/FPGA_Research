

================================================================
== Vivado HLS Report for 'Matrix_Multiply'
================================================================
* Date:           Sun Oct 15 15:53:44 2017

* Version:        2016.3 (Build 1682563 on Mon Oct 10 19:41:59 MDT 2016)
* Project:        Proton
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      6.75|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  121|  121|  122|  122|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+-----+-----+----------+-----------+-----------+------+----------+
        |                 |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name    | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1         |    8|    8|         4|          -|          -|     2|    no    |
        | + Loop 1.1      |    2|    2|         1|          -|          -|     2|    no    |
        |- Loop 2         |   12|   12|         6|          -|          -|     2|    no    |
        | + Loop 2.1      |    4|    4|         2|          -|          -|     2|    no    |
        |- Loop 3         |   12|   12|         6|          -|          -|     2|    no    |
        | + Loop 3.1      |    4|    4|         2|          -|          -|     2|    no    |
        |- Loop 4         |   76|   76|        38|          -|          -|     2|    no    |
        | + Loop 4.1      |   36|   36|        18|          -|          -|     2|    no    |
        |  ++ Loop 4.1.1  |   16|   16|         8|          -|          -|     2|    no    |
        |- Loop 5         |    8|    8|         4|          -|          -|     2|    no    |
        | + Loop 5.1      |    2|    2|         1|          -|          -|     2|    no    |
        +-----------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 21
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond10)
	4  / (exitcond10)
3 --> 
	3  / (!exitcond9)
	2  / (exitcond9)
4 --> 
	5  / (!exitcond8)
	7  / (exitcond8)
5 --> 
	6  / (!exitcond7)
	4  / (exitcond7)
6 --> 
	5  / true
7 --> 
	8  / (!exitcond6)
	10  / (exitcond6)
8 --> 
	9  / (!exitcond5)
	7  / (exitcond5)
9 --> 
	8  / true
10 --> 
	11  / (!exitcond4)
	20  / (exitcond4)
11 --> 
	12  / (!exitcond3)
	10  / (exitcond3)
12 --> 
	13  / (!exitcond2)
	11  / (exitcond2)
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	12  / true
20 --> 
	21  / (!exitcond1)
21 --> 
	21  / (!exitcond)
	20  / (exitcond)
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: C1 (3)  [1/1] 0.00ns
:0  %C1 = alloca i32

ST_1: C1_0_1 (4)  [1/1] 0.00ns
:1  %C1_0_1 = alloca i32

ST_1: C1_1 (5)  [1/1] 0.00ns
:2  %C1_1 = alloca i32

ST_1: C1_1_1 (6)  [1/1] 0.00ns
:3  %C1_1_1 = alloca i32

ST_1: StgValue_26 (7)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %A) nounwind, !map !65

ST_1: StgValue_27 (8)  [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap([4 x i32]* %C) nounwind, !map !71

ST_1: StgValue_28 (9)  [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecTopModule([16 x i8]* @Matrix_Multiply_str) nounwind

ST_1: StgValue_29 (10)  [1/1] 0.00ns  loc: Proton/core.cpp:5
:7  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str1804, i32 0, i32 0, [1 x i8]* @p_str1805, i32 0, i32 0, [9 x i8]* @p_str1806, [1 x i8]* @p_str1805, [1 x i8]* @p_str1805, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1805, [1 x i8]* @p_str1805) nounwind

ST_1: StgValue_30 (11)  [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecInterface([8 x i32]* %A, [5 x i8]* @p_str1807, i32 0, i32 0, [1 x i8]* @p_str1805, i32 0, i32 0, [1 x i8]* @p_str1805, [1 x i8]* @p_str1805, [1 x i8]* @p_str1805, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1805, [1 x i8]* @p_str1805) nounwind

ST_1: StgValue_31 (12)  [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecInterface([4 x i32]* %C, [5 x i8]* @p_str1807, i32 0, i32 0, [1 x i8]* @p_str1805, i32 0, i32 0, [1 x i8]* @p_str1805, [1 x i8]* @p_str1805, [1 x i8]* @p_str1805, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1805, [1 x i8]* @p_str1805) nounwind

ST_1: StgValue_32 (13)  [1/1] 1.57ns  loc: Proton/core.cpp:16
:10  br label %.loopexit


 <State 2>: 1.57ns
ST_2: i1 (15)  [1/1] 0.00ns
.loopexit:0  %i1 = phi i2 [ 0, %0 ], [ %i, %.loopexit.loopexit ]

ST_2: C1_load (16)  [1/1] 0.00ns
.loopexit:1  %C1_load = load i32* %C1

ST_2: C1_0_1_load (17)  [1/1] 0.00ns
.loopexit:2  %C1_0_1_load = load i32* %C1_0_1

ST_2: C1_1_load (18)  [1/1] 0.00ns
.loopexit:3  %C1_1_load = load i32* %C1_1

ST_2: C1_1_1_load (19)  [1/1] 0.00ns
.loopexit:4  %C1_1_1_load = load i32* %C1_1_1

ST_2: exitcond10 (20)  [1/1] 1.36ns  loc: Proton/core.cpp:16
.loopexit:5  %exitcond10 = icmp eq i2 %i1, -2

ST_2: empty (21)  [1/1] 0.00ns
.loopexit:6  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind

ST_2: i (22)  [1/1] 0.80ns  loc: Proton/core.cpp:16
.loopexit:7  %i = add i2 %i1, 1

ST_2: StgValue_41 (23)  [1/1] 0.00ns  loc: Proton/core.cpp:16
.loopexit:8  br i1 %exitcond10, label %.preheader15.preheader, label %.preheader16.preheader

ST_2: tmp_2 (25)  [1/1] 0.00ns  loc: Proton/core.cpp:16
.preheader16.preheader:0  %tmp_2 = trunc i2 %i1 to i1

ST_2: StgValue_43 (26)  [1/1] 1.57ns  loc: Proton/core.cpp:18
.preheader16.preheader:1  br label %.preheader16

ST_2: A1_1_1_4 (55)  [1/1] 0.00ns
.preheader15.preheader:0  %A1_1_1_4 = alloca i32

ST_2: A1_1_1_9 (56)  [1/1] 0.00ns
.preheader15.preheader:1  %A1_1_1_9 = alloca i32

ST_2: A1_1_1_10 (57)  [1/1] 0.00ns
.preheader15.preheader:2  %A1_1_1_10 = alloca i32

ST_2: A1_1_1_11 (58)  [1/1] 0.00ns
.preheader15.preheader:3  %A1_1_1_11 = alloca i32

ST_2: StgValue_48 (59)  [1/1] 1.57ns  loc: Proton/core.cpp:25
.preheader15.preheader:4  br label %.preheader15


 <State 3>: 1.37ns
ST_3: j2 (28)  [1/1] 0.00ns
.preheader16:0  %j2 = phi i2 [ %j, %_ifconv ], [ 0, %.preheader16.preheader ]

ST_3: exitcond9 (29)  [1/1] 1.36ns  loc: Proton/core.cpp:18
.preheader16:1  %exitcond9 = icmp eq i2 %j2, -2

ST_3: empty_3 (30)  [1/1] 0.00ns
.preheader16:2  %empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind

ST_3: j (31)  [1/1] 0.80ns  loc: Proton/core.cpp:18
.preheader16:3  %j = add i2 %j2, 1

ST_3: StgValue_53 (32)  [1/1] 0.00ns  loc: Proton/core.cpp:18
.preheader16:4  br i1 %exitcond9, label %.loopexit.loopexit, label %_ifconv

ST_3: C1_load_1 (34)  [1/1] 0.00ns
_ifconv:0  %C1_load_1 = load i32* %C1

ST_3: C1_0_1_load_1 (35)  [1/1] 0.00ns
_ifconv:1  %C1_0_1_load_1 = load i32* %C1_0_1

ST_3: C1_1_load_1 (36)  [1/1] 0.00ns
_ifconv:2  %C1_1_load_1 = load i32* %C1_1

ST_3: C1_1_1_load_1 (37)  [1/1] 0.00ns
_ifconv:3  %C1_1_1_load_1 = load i32* %C1_1_1

ST_3: tmp_4 (38)  [1/1] 0.00ns  loc: Proton/core.cpp:18
_ifconv:4  %tmp_4 = trunc i2 %j2 to i1

ST_3: C1_1_1_8 (39)  [1/1] 0.00ns  loc: Proton/core.cpp:20 (grouped into LUT with out node C1_1_1_2)
_ifconv:5  %C1_1_1_8 = select i1 %tmp_4, i32 0, i32 %C1_1_1_load_1

ST_3: C1_1_0_8 (40)  [1/1] 0.00ns  loc: Proton/core.cpp:20 (grouped into LUT with out node C1_1_0_2)
_ifconv:6  %C1_1_0_8 = select i1 %tmp_4, i32 %C1_1_load_1, i32 0

ST_3: C1_0_1_8 (41)  [1/1] 0.00ns  loc: Proton/core.cpp:20 (grouped into LUT with out node C1_0_1_2)
_ifconv:7  %C1_0_1_8 = select i1 %tmp_4, i32 0, i32 %C1_0_1_load_1

ST_3: C1_0_0_8 (42)  [1/1] 0.00ns  loc: Proton/core.cpp:20 (grouped into LUT with out node C1_0_0_2)
_ifconv:8  %C1_0_0_8 = select i1 %tmp_4, i32 %C1_load_1, i32 0

ST_3: C1_1_1_2 (43)  [1/1] 1.37ns  loc: Proton/core.cpp:16 (out node of the LUT)
_ifconv:9  %C1_1_1_2 = select i1 %tmp_2, i32 %C1_1_1_8, i32 %C1_1_1_load_1

ST_3: C1_1_0_2 (44)  [1/1] 1.37ns  loc: Proton/core.cpp:16 (out node of the LUT)
_ifconv:10  %C1_1_0_2 = select i1 %tmp_2, i32 %C1_1_0_8, i32 %C1_1_load_1

ST_3: C1_0_1_2 (45)  [1/1] 1.37ns  loc: Proton/core.cpp:16 (out node of the LUT)
_ifconv:11  %C1_0_1_2 = select i1 %tmp_2, i32 %C1_0_1_load_1, i32 %C1_0_1_8

ST_3: C1_0_0_2 (46)  [1/1] 1.37ns  loc: Proton/core.cpp:16 (out node of the LUT)
_ifconv:12  %C1_0_0_2 = select i1 %tmp_2, i32 %C1_load_1, i32 %C1_0_0_8

ST_3: StgValue_67 (47)  [1/1] 0.00ns  loc: Proton/core.cpp:16
_ifconv:13  store i32 %C1_1_1_2, i32* %C1_1_1

ST_3: StgValue_68 (48)  [1/1] 0.00ns  loc: Proton/core.cpp:16
_ifconv:14  store i32 %C1_1_0_2, i32* %C1_1

ST_3: StgValue_69 (49)  [1/1] 0.00ns  loc: Proton/core.cpp:16
_ifconv:15  store i32 %C1_0_1_2, i32* %C1_0_1

ST_3: StgValue_70 (50)  [1/1] 0.00ns  loc: Proton/core.cpp:16
_ifconv:16  store i32 %C1_0_0_2, i32* %C1

ST_3: StgValue_71 (51)  [1/1] 0.00ns  loc: Proton/core.cpp:18
_ifconv:17  br label %.preheader16

ST_3: StgValue_72 (53)  [1/1] 0.00ns
.loopexit.loopexit:0  br label %.loopexit


 <State 4>: 1.57ns
ST_4: i3 (61)  [1/1] 0.00ns
.preheader15:0  %i3 = phi i2 [ 0, %.preheader15.preheader ], [ %i_1, %.preheader15.loopexit ]

ST_4: k (62)  [1/1] 0.00ns  loc: Proton/core.cpp:27
.preheader15:1  %k = phi i3 [ 0, %.preheader15.preheader ], [ %tmp, %.preheader15.loopexit ]

ST_4: exitcond8 (63)  [1/1] 1.36ns  loc: Proton/core.cpp:25
.preheader15:2  %exitcond8 = icmp eq i2 %i3, -2

ST_4: empty_4 (64)  [1/1] 0.00ns
.preheader15:3  %empty_4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind

ST_4: i_1 (65)  [1/1] 0.80ns  loc: Proton/core.cpp:25
.preheader15:4  %i_1 = add i2 %i3, 1

ST_4: StgValue_78 (66)  [1/1] 0.00ns  loc: Proton/core.cpp:25
.preheader15:5  br i1 %exitcond8, label %.preheader14.preheader, label %1

ST_4: tmp (68)  [1/1] 0.80ns  loc: Proton/core.cpp:27
:0  %tmp = add i3 2, %k

ST_4: tmp_3 (69)  [1/1] 0.00ns  loc: Proton/core.cpp:25
:1  %tmp_3 = trunc i2 %i3 to i1

ST_4: StgValue_81 (70)  [1/1] 1.57ns  loc: Proton/core.cpp:27
:2  br label %2

ST_4: B1_1_1_4 (104)  [1/1] 0.00ns
.preheader14.preheader:0  %B1_1_1_4 = alloca i32

ST_4: B1_1_1_9 (105)  [1/1] 0.00ns
.preheader14.preheader:1  %B1_1_1_9 = alloca i32

ST_4: B1_1_1_10 (106)  [1/1] 0.00ns
.preheader14.preheader:2  %B1_1_1_10 = alloca i32

ST_4: B1_1_1_11 (107)  [1/1] 0.00ns
.preheader14.preheader:3  %B1_1_1_11 = alloca i32

ST_4: StgValue_86 (108)  [1/1] 1.57ns  loc: Proton/core.cpp:35
.preheader14.preheader:4  br label %.preheader14


 <State 5>: 2.39ns
ST_5: j4 (72)  [1/1] 0.00ns
:0  %j4 = phi i2 [ 0, %1 ], [ %j_1, %_ifconv1 ]

ST_5: k_1 (73)  [1/1] 0.00ns  loc: Proton/core.cpp:27
:1  %k_1 = phi i3 [ %k, %1 ], [ %tmp_5, %_ifconv1 ]

ST_5: exitcond7 (74)  [1/1] 1.36ns  loc: Proton/core.cpp:27
:2  %exitcond7 = icmp eq i2 %j4, -2

ST_5: empty_5 (75)  [1/1] 0.00ns
:3  %empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind

ST_5: j_1 (76)  [1/1] 0.80ns  loc: Proton/core.cpp:27
:4  %j_1 = add i2 %j4, 1

ST_5: StgValue_92 (77)  [1/1] 0.00ns  loc: Proton/core.cpp:27
:5  br i1 %exitcond7, label %.preheader15.loopexit, label %_ifconv1

ST_5: k_1_cast1 (83)  [1/1] 0.00ns  loc: Proton/core.cpp:27
_ifconv1:4  %k_1_cast1 = zext i3 %k_1 to i32

ST_5: A_addr (84)  [1/1] 0.00ns  loc: Proton/core.cpp:29
_ifconv1:5  %A_addr = getelementptr [8 x i32]* %A, i32 0, i32 %k_1_cast1

ST_5: A1_1_0 (85)  [2/2] 2.39ns  loc: Proton/core.cpp:29
_ifconv1:6  %A1_1_0 = load i32* %A_addr, align 4

ST_5: tmp_7 (86)  [1/1] 0.00ns  loc: Proton/core.cpp:27
_ifconv1:7  %tmp_7 = trunc i2 %j4 to i1

ST_5: tmp_5 (95)  [1/1] 0.80ns  loc: Proton/core.cpp:30
_ifconv1:16  %tmp_5 = add i3 1, %k_1

ST_5: StgValue_98 (102)  [1/1] 0.00ns
.preheader15.loopexit:0  br label %.preheader15


 <State 6>: 3.76ns
ST_6: A1_1_1_4_load (79)  [1/1] 0.00ns
_ifconv1:0  %A1_1_1_4_load = load i32* %A1_1_1_4

ST_6: A1_1_1_9_load (80)  [1/1] 0.00ns
_ifconv1:1  %A1_1_1_9_load = load i32* %A1_1_1_9

ST_6: A1_1_1_10_load (81)  [1/1] 0.00ns
_ifconv1:2  %A1_1_1_10_load = load i32* %A1_1_1_10

ST_6: A1_1_1_11_load (82)  [1/1] 0.00ns
_ifconv1:3  %A1_1_1_11_load = load i32* %A1_1_1_11

ST_6: A1_1_0 (85)  [1/2] 2.39ns  loc: Proton/core.cpp:29
_ifconv1:6  %A1_1_0 = load i32* %A_addr, align 4

ST_6: A1_1_1_1 (87)  [1/1] 0.00ns  loc: Proton/core.cpp:29 (grouped into LUT with out node A1_1_1_5)
_ifconv1:8  %A1_1_1_1 = select i1 %tmp_7, i32 %A1_1_0, i32 %A1_1_1_11_load

ST_6: A1_1_1_2 (88)  [1/1] 0.00ns  loc: Proton/core.cpp:29 (grouped into LUT with out node A1_1_1_6)
_ifconv1:9  %A1_1_1_2 = select i1 %tmp_7, i32 %A1_1_1_10_load, i32 %A1_1_0

ST_6: A1_1_1 (89)  [1/1] 0.00ns  loc: Proton/core.cpp:29 (grouped into LUT with out node A1_1_1_7)
_ifconv1:10  %A1_1_1 = select i1 %tmp_7, i32 %A1_1_0, i32 %A1_1_1_9_load

ST_6: A1_1_1_3 (90)  [1/1] 0.00ns  loc: Proton/core.cpp:29 (grouped into LUT with out node A1_1_1_8)
_ifconv1:11  %A1_1_1_3 = select i1 %tmp_7, i32 %A1_1_1_4_load, i32 %A1_1_0

ST_6: A1_1_1_5 (91)  [1/1] 1.37ns  loc: Proton/core.cpp:25 (out node of the LUT)
_ifconv1:12  %A1_1_1_5 = select i1 %tmp_3, i32 %A1_1_1_1, i32 %A1_1_1_11_load

ST_6: A1_1_1_6 (92)  [1/1] 1.37ns  loc: Proton/core.cpp:25 (out node of the LUT)
_ifconv1:13  %A1_1_1_6 = select i1 %tmp_3, i32 %A1_1_1_2, i32 %A1_1_1_10_load

ST_6: A1_1_1_7 (93)  [1/1] 1.37ns  loc: Proton/core.cpp:25 (out node of the LUT)
_ifconv1:14  %A1_1_1_7 = select i1 %tmp_3, i32 %A1_1_1_9_load, i32 %A1_1_1

ST_6: A1_1_1_8 (94)  [1/1] 1.37ns  loc: Proton/core.cpp:25 (out node of the LUT)
_ifconv1:15  %A1_1_1_8 = select i1 %tmp_3, i32 %A1_1_1_4_load, i32 %A1_1_1_3

ST_6: StgValue_112 (96)  [1/1] 0.00ns  loc: Proton/core.cpp:29
_ifconv1:17  store i32 %A1_1_1_5, i32* %A1_1_1_11

ST_6: StgValue_113 (97)  [1/1] 0.00ns  loc: Proton/core.cpp:29
_ifconv1:18  store i32 %A1_1_1_6, i32* %A1_1_1_10

ST_6: StgValue_114 (98)  [1/1] 0.00ns  loc: Proton/core.cpp:29
_ifconv1:19  store i32 %A1_1_1_7, i32* %A1_1_1_9

ST_6: StgValue_115 (99)  [1/1] 0.00ns  loc: Proton/core.cpp:29
_ifconv1:20  store i32 %A1_1_1_8, i32* %A1_1_1_4

ST_6: StgValue_116 (100)  [1/1] 0.00ns  loc: Proton/core.cpp:27
_ifconv1:21  br label %2


 <State 7>: 1.57ns
ST_7: i5 (110)  [1/1] 0.00ns
.preheader14:0  %i5 = phi i2 [ 0, %.preheader14.preheader ], [ %i_2, %.preheader14.loopexit ]

ST_7: k_2 (111)  [1/1] 0.00ns
.preheader14:1  %k_2 = phi i4 [ 4, %.preheader14.preheader ], [ %k_6, %.preheader14.loopexit ]

ST_7: exitcond6 (112)  [1/1] 1.36ns  loc: Proton/core.cpp:35
.preheader14:2  %exitcond6 = icmp eq i2 %i5, -2

ST_7: empty_6 (113)  [1/1] 0.00ns
.preheader14:3  %empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind

ST_7: i_2 (114)  [1/1] 0.80ns  loc: Proton/core.cpp:35
.preheader14:4  %i_2 = add i2 %i5, 1

ST_7: StgValue_122 (115)  [1/1] 0.00ns  loc: Proton/core.cpp:35
.preheader14:5  br i1 %exitcond6, label %.preheader13.preheader, label %3

ST_7: k_6 (117)  [1/1] 0.80ns  loc: Proton/core.cpp:30
:0  %k_6 = add i4 2, %k_2

ST_7: tmp_6 (118)  [1/1] 0.00ns  loc: Proton/core.cpp:35
:1  %tmp_6 = trunc i2 %i5 to i1

ST_7: StgValue_125 (119)  [1/1] 1.57ns  loc: Proton/core.cpp:37
:2  br label %4

ST_7: C1_1_1_4 (153)  [1/1] 0.00ns
.preheader13.preheader:0  %C1_1_1_4 = alloca i32

ST_7: C1_1_1_9 (154)  [1/1] 0.00ns
.preheader13.preheader:1  %C1_1_1_9 = alloca i32

ST_7: C1_1_1_10 (155)  [1/1] 0.00ns
.preheader13.preheader:2  %C1_1_1_10 = alloca i32

ST_7: C1_1_1_11 (156)  [1/1] 0.00ns
.preheader13.preheader:3  %C1_1_1_11 = alloca i32

ST_7: StgValue_130 (157)  [1/1] 1.57ns
.preheader13.preheader:4  store i32 %C1_1_1_load, i32* %C1_1_1_11

ST_7: StgValue_131 (158)  [1/1] 1.57ns
.preheader13.preheader:5  store i32 %C1_1_load, i32* %C1_1_1_10

ST_7: StgValue_132 (159)  [1/1] 1.57ns
.preheader13.preheader:6  store i32 %C1_0_1_load, i32* %C1_1_1_9

ST_7: StgValue_133 (160)  [1/1] 1.57ns
.preheader13.preheader:7  store i32 %C1_load, i32* %C1_1_1_4

ST_7: StgValue_134 (161)  [1/1] 1.57ns  loc: Proton/core.cpp:45
.preheader13.preheader:8  br label %.preheader13


 <State 8>: 2.39ns
ST_8: j6 (121)  [1/1] 0.00ns
:0  %j6 = phi i2 [ 0, %3 ], [ %j_2, %_ifconv2 ]

ST_8: k_3 (122)  [1/1] 0.00ns
:1  %k_3 = phi i4 [ %k_2, %3 ], [ %k_7, %_ifconv2 ]

ST_8: exitcond5 (123)  [1/1] 1.36ns  loc: Proton/core.cpp:37
:2  %exitcond5 = icmp eq i2 %j6, -2

ST_8: empty_7 (124)  [1/1] 0.00ns
:3  %empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind

ST_8: j_2 (125)  [1/1] 0.80ns  loc: Proton/core.cpp:37
:4  %j_2 = add i2 %j6, 1

ST_8: StgValue_140 (126)  [1/1] 0.00ns  loc: Proton/core.cpp:37
:5  br i1 %exitcond5, label %.preheader14.loopexit, label %_ifconv2

ST_8: k_3_cast2 (132)  [1/1] 0.00ns  loc: Proton/core.cpp:37
_ifconv2:4  %k_3_cast2 = zext i4 %k_3 to i32

ST_8: A_addr_1 (133)  [1/1] 0.00ns  loc: Proton/core.cpp:39
_ifconv2:5  %A_addr_1 = getelementptr [8 x i32]* %A, i32 0, i32 %k_3_cast2

ST_8: B1_1_0 (134)  [2/2] 2.39ns  loc: Proton/core.cpp:39
_ifconv2:6  %B1_1_0 = load i32* %A_addr_1, align 4

ST_8: tmp_9 (135)  [1/1] 0.00ns  loc: Proton/core.cpp:37
_ifconv2:7  %tmp_9 = trunc i2 %j6 to i1

ST_8: k_7 (144)  [1/1] 0.80ns  loc: Proton/core.cpp:40
_ifconv2:16  %k_7 = add i4 1, %k_3

ST_8: StgValue_146 (151)  [1/1] 0.00ns
.preheader14.loopexit:0  br label %.preheader14


 <State 9>: 3.76ns
ST_9: B1_1_1_4_load (128)  [1/1] 0.00ns
_ifconv2:0  %B1_1_1_4_load = load i32* %B1_1_1_4

ST_9: B1_1_1_9_load (129)  [1/1] 0.00ns
_ifconv2:1  %B1_1_1_9_load = load i32* %B1_1_1_9

ST_9: B1_1_1_10_load (130)  [1/1] 0.00ns
_ifconv2:2  %B1_1_1_10_load = load i32* %B1_1_1_10

ST_9: B1_1_1_11_load (131)  [1/1] 0.00ns
_ifconv2:3  %B1_1_1_11_load = load i32* %B1_1_1_11

ST_9: B1_1_0 (134)  [1/2] 2.39ns  loc: Proton/core.cpp:39
_ifconv2:6  %B1_1_0 = load i32* %A_addr_1, align 4

ST_9: B1_1_1_1 (136)  [1/1] 0.00ns  loc: Proton/core.cpp:39 (grouped into LUT with out node B1_1_1_5)
_ifconv2:8  %B1_1_1_1 = select i1 %tmp_9, i32 %B1_1_0, i32 %B1_1_1_11_load

ST_9: B1_1_1_2 (137)  [1/1] 0.00ns  loc: Proton/core.cpp:39 (grouped into LUT with out node B1_1_1_6)
_ifconv2:9  %B1_1_1_2 = select i1 %tmp_9, i32 %B1_1_1_10_load, i32 %B1_1_0

ST_9: B1_1_1 (138)  [1/1] 0.00ns  loc: Proton/core.cpp:39 (grouped into LUT with out node B1_1_1_7)
_ifconv2:10  %B1_1_1 = select i1 %tmp_9, i32 %B1_1_0, i32 %B1_1_1_9_load

ST_9: B1_1_1_3 (139)  [1/1] 0.00ns  loc: Proton/core.cpp:39 (grouped into LUT with out node B1_1_1_8)
_ifconv2:11  %B1_1_1_3 = select i1 %tmp_9, i32 %B1_1_1_4_load, i32 %B1_1_0

ST_9: B1_1_1_5 (140)  [1/1] 1.37ns  loc: Proton/core.cpp:35 (out node of the LUT)
_ifconv2:12  %B1_1_1_5 = select i1 %tmp_6, i32 %B1_1_1_1, i32 %B1_1_1_11_load

ST_9: B1_1_1_6 (141)  [1/1] 1.37ns  loc: Proton/core.cpp:35 (out node of the LUT)
_ifconv2:13  %B1_1_1_6 = select i1 %tmp_6, i32 %B1_1_1_2, i32 %B1_1_1_10_load

ST_9: B1_1_1_7 (142)  [1/1] 1.37ns  loc: Proton/core.cpp:35 (out node of the LUT)
_ifconv2:14  %B1_1_1_7 = select i1 %tmp_6, i32 %B1_1_1_9_load, i32 %B1_1_1

ST_9: B1_1_1_8 (143)  [1/1] 1.37ns  loc: Proton/core.cpp:35 (out node of the LUT)
_ifconv2:15  %B1_1_1_8 = select i1 %tmp_6, i32 %B1_1_1_4_load, i32 %B1_1_1_3

ST_9: StgValue_160 (145)  [1/1] 0.00ns  loc: Proton/core.cpp:39
_ifconv2:17  store i32 %B1_1_1_5, i32* %B1_1_1_11

ST_9: StgValue_161 (146)  [1/1] 0.00ns  loc: Proton/core.cpp:39
_ifconv2:18  store i32 %B1_1_1_6, i32* %B1_1_1_10

ST_9: StgValue_162 (147)  [1/1] 0.00ns  loc: Proton/core.cpp:39
_ifconv2:19  store i32 %B1_1_1_7, i32* %B1_1_1_9

ST_9: StgValue_163 (148)  [1/1] 0.00ns  loc: Proton/core.cpp:39
_ifconv2:20  store i32 %B1_1_1_8, i32* %B1_1_1_4

ST_9: StgValue_164 (149)  [1/1] 0.00ns  loc: Proton/core.cpp:37
_ifconv2:21  br label %4


 <State 10>: 1.57ns
ST_10: i7 (163)  [1/1] 0.00ns
.preheader13:0  %i7 = phi i2 [ 0, %.preheader13.preheader ], [ %i_3, %.preheader13.loopexit ]

ST_10: exitcond4 (164)  [1/1] 1.36ns  loc: Proton/core.cpp:45
.preheader13:1  %exitcond4 = icmp eq i2 %i7, -2

ST_10: empty_8 (165)  [1/1] 0.00ns
.preheader13:2  %empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind

ST_10: i_3 (166)  [1/1] 0.80ns  loc: Proton/core.cpp:45
.preheader13:3  %i_3 = add i2 %i7, 1

ST_10: StgValue_169 (167)  [1/1] 0.00ns  loc: Proton/core.cpp:45
.preheader13:4  br i1 %exitcond4, label %.preheader.preheader, label %.preheader12.preheader

ST_10: tmp_8 (169)  [1/1] 0.00ns  loc: Proton/core.cpp:45
.preheader12.preheader:0  %tmp_8 = trunc i2 %i7 to i1

ST_10: StgValue_171 (170)  [1/1] 1.57ns  loc: Proton/core.cpp:47
.preheader12.preheader:1  br label %.preheader12

ST_10: StgValue_172 (229)  [1/1] 1.57ns  loc: Proton/core.cpp:58
.preheader.preheader:0  br label %.preheader


 <State 11>: 1.57ns
ST_11: j8 (172)  [1/1] 0.00ns
.preheader12:0  %j8 = phi i2 [ 0, %.preheader12.preheader ], [ %j_4, %.preheader12.loopexit ]

ST_11: exitcond3 (173)  [1/1] 1.36ns  loc: Proton/core.cpp:47
.preheader12:1  %exitcond3 = icmp eq i2 %j8, -2

ST_11: empty_9 (174)  [1/1] 0.00ns
.preheader12:2  %empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind

ST_11: j_4 (175)  [1/1] 0.80ns  loc: Proton/core.cpp:47
.preheader12:3  %j_4 = add i2 %j8, 1

ST_11: StgValue_177 (176)  [1/1] 0.00ns  loc: Proton/core.cpp:47
.preheader12:4  br i1 %exitcond3, label %.preheader13.loopexit, label %.preheader11.preheader

ST_11: B1_1_1_4_load_1 (178)  [1/1] 0.00ns  loc: Proton/core.cpp:51
.preheader11.preheader:0  %B1_1_1_4_load_1 = load i32* %B1_1_1_4

ST_11: B1_1_1_9_load_1 (179)  [1/1] 0.00ns  loc: Proton/core.cpp:51
.preheader11.preheader:1  %B1_1_1_9_load_1 = load i32* %B1_1_1_9

ST_11: B1_1_1_10_load_1 (180)  [1/1] 0.00ns  loc: Proton/core.cpp:51
.preheader11.preheader:2  %B1_1_1_10_load_1 = load i32* %B1_1_1_10

ST_11: B1_1_1_11_load_1 (181)  [1/1] 0.00ns  loc: Proton/core.cpp:51
.preheader11.preheader:3  %B1_1_1_11_load_1 = load i32* %B1_1_1_11

ST_11: tmp_11 (182)  [1/1] 0.00ns  loc: Proton/core.cpp:47
.preheader11.preheader:4  %tmp_11 = trunc i2 %j8 to i1

ST_11: B1_load15_phi (183)  [1/1] 1.37ns  loc: Proton/core.cpp:51
.preheader11.preheader:5  %B1_load15_phi = select i1 %tmp_11, i32 %B1_1_1_11_load_1, i32 %B1_1_1_10_load_1

ST_11: B1_load14_phi (184)  [1/1] 1.37ns  loc: Proton/core.cpp:51
.preheader11.preheader:6  %B1_load14_phi = select i1 %tmp_11, i32 %B1_1_1_9_load_1, i32 %B1_1_1_4_load_1

ST_11: StgValue_185 (185)  [1/1] 1.57ns  loc: Proton/core.cpp:49
.preheader11.preheader:7  br label %.preheader11

ST_11: StgValue_186 (227)  [1/1] 0.00ns
.preheader13.loopexit:0  br label %.preheader13


 <State 12>: 2.74ns
ST_12: k9 (187)  [1/1] 0.00ns
.preheader11:0  %k9 = phi i2 [ 0, %.preheader11.preheader ], [ %k_9, %_ifconv3 ]

ST_12: exitcond2 (188)  [1/1] 1.36ns  loc: Proton/core.cpp:49
.preheader11:1  %exitcond2 = icmp eq i2 %k9, -2

ST_12: empty_10 (189)  [1/1] 0.00ns
.preheader11:2  %empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind

ST_12: k_9 (190)  [1/1] 0.80ns  loc: Proton/core.cpp:49
.preheader11:3  %k_9 = add i2 %k9, 1

ST_12: StgValue_191 (191)  [1/1] 0.00ns  loc: Proton/core.cpp:49
.preheader11:4  br i1 %exitcond2, label %.preheader12.loopexit, label %_ifconv3

ST_12: A1_1_1_4_load_1 (197)  [1/1] 0.00ns  loc: Proton/core.cpp:51
_ifconv3:4  %A1_1_1_4_load_1 = load i32* %A1_1_1_4

ST_12: A1_1_1_9_load_1 (198)  [1/1] 0.00ns  loc: Proton/core.cpp:51
_ifconv3:5  %A1_1_1_9_load_1 = load i32* %A1_1_1_9

ST_12: A1_1_1_10_load_1 (199)  [1/1] 0.00ns  loc: Proton/core.cpp:51
_ifconv3:6  %A1_1_1_10_load_1 = load i32* %A1_1_1_10

ST_12: A1_1_1_11_load_1 (200)  [1/1] 0.00ns  loc: Proton/core.cpp:51
_ifconv3:7  %A1_1_1_11_load_1 = load i32* %A1_1_1_11

ST_12: tmp_13 (204)  [1/1] 0.00ns  loc: Proton/core.cpp:49
_ifconv3:11  %tmp_13 = trunc i2 %k9 to i1

ST_12: A1_load9_phi (205)  [1/1] 0.00ns  loc: Proton/core.cpp:51 (grouped into LUT with out node A1_load_phi)
_ifconv3:12  %A1_load9_phi = select i1 %tmp_13, i32 %A1_1_1_11_load_1, i32 %A1_1_1_10_load_1

ST_12: A1_load8_phi (206)  [1/1] 1.37ns  loc: Proton/core.cpp:51 (out node of the LUT)
_ifconv3:13  %A1_load8_phi = select i1 %tmp_13, i32 %A1_1_1_9_load_1, i32 %A1_1_1_4_load_1

ST_12: A1_load_phi (207)  [1/1] 1.37ns  loc: Proton/core.cpp:51 (out node of the LUT)
_ifconv3:14  %A1_load_phi = select i1 %tmp_8, i32 %A1_load9_phi, i32 %A1_load8_phi

ST_12: B1_load_phi (208)  [1/1] 1.37ns  loc: Proton/core.cpp:51
_ifconv3:15  %B1_load_phi = select i1 %tmp_13, i32 %B1_load15_phi, i32 %B1_load14_phi

ST_12: StgValue_201 (225)  [1/1] 0.00ns
.preheader12.loopexit:0  br label %.preheader12


 <State 13>: 6.08ns
ST_13: tmp_1 (209)  [6/6] 6.08ns  loc: Proton/core.cpp:51
_ifconv3:16  %tmp_1 = mul nsw i32 %B1_load_phi, %A1_load_phi


 <State 14>: 6.08ns
ST_14: tmp_1 (209)  [5/6] 6.08ns  loc: Proton/core.cpp:51
_ifconv3:16  %tmp_1 = mul nsw i32 %B1_load_phi, %A1_load_phi


 <State 15>: 6.08ns
ST_15: tmp_1 (209)  [4/6] 6.08ns  loc: Proton/core.cpp:51
_ifconv3:16  %tmp_1 = mul nsw i32 %B1_load_phi, %A1_load_phi


 <State 16>: 6.08ns
ST_16: tmp_1 (209)  [3/6] 6.08ns  loc: Proton/core.cpp:51
_ifconv3:16  %tmp_1 = mul nsw i32 %B1_load_phi, %A1_load_phi


 <State 17>: 6.08ns
ST_17: tmp_1 (209)  [2/6] 6.08ns  loc: Proton/core.cpp:51
_ifconv3:16  %tmp_1 = mul nsw i32 %B1_load_phi, %A1_load_phi


 <State 18>: 6.08ns
ST_18: tmp_1 (209)  [1/6] 6.08ns  loc: Proton/core.cpp:51
_ifconv3:16  %tmp_1 = mul nsw i32 %B1_load_phi, %A1_load_phi


 <State 19>: 6.75ns
ST_19: C1_1_1_4_load_1 (193)  [1/1] 0.00ns
_ifconv3:0  %C1_1_1_4_load_1 = load i32* %C1_1_1_4

ST_19: C1_1_1_9_load_1 (194)  [1/1] 0.00ns
_ifconv3:1  %C1_1_1_9_load_1 = load i32* %C1_1_1_9

ST_19: C1_1_1_10_load_1 (195)  [1/1] 0.00ns
_ifconv3:2  %C1_1_1_10_load_1 = load i32* %C1_1_1_10

ST_19: C1_1_1_11_load_1 (196)  [1/1] 0.00ns
_ifconv3:3  %C1_1_1_11_load_1 = load i32* %C1_1_1_11

ST_19: C1_load_126_phi (201)  [1/1] 0.00ns  loc: Proton/core.cpp:51 (grouped into LUT with out node C1_1_0)
_ifconv3:8  %C1_load_126_phi = select i1 %tmp_11, i32 %C1_1_1_11_load_1, i32 %C1_1_1_10_load_1

ST_19: C1_load_125_phi (202)  [1/1] 1.37ns  loc: Proton/core.cpp:51 (out node of the LUT)
_ifconv3:9  %C1_load_125_phi = select i1 %tmp_11, i32 %C1_1_1_9_load_1, i32 %C1_1_1_4_load_1

ST_19: C1_load_1_phi (203)  [1/1] 0.00ns  loc: Proton/core.cpp:51 (grouped into LUT with out node C1_1_0)
_ifconv3:10  %C1_load_1_phi = select i1 %tmp_8, i32 %C1_load_126_phi, i32 %C1_load_125_phi

ST_19: C1_1_0 (210)  [1/1] 2.44ns  loc: Proton/core.cpp:51 (out node of the LUT)
_ifconv3:17  %C1_1_0 = add nsw i32 %tmp_1, %C1_load_1_phi

ST_19: C1_1_1_1 (211)  [1/1] 0.00ns  loc: Proton/core.cpp:51 (grouped into LUT with out node C1_1_1_5)
_ifconv3:18  %C1_1_1_1 = select i1 %tmp_11, i32 %C1_1_0, i32 %C1_1_1_11_load_1

ST_19: C1_1_1_2_11 (212)  [1/1] 0.00ns  loc: Proton/core.cpp:51 (grouped into LUT with out node C1_1_1_6)
_ifconv3:19  %C1_1_1_2_11 = select i1 %tmp_11, i32 %C1_1_1_10_load_1, i32 %C1_1_0

ST_19: C1_1_1_12 (213)  [1/1] 0.00ns  loc: Proton/core.cpp:51 (grouped into LUT with out node C1_1_1_7)
_ifconv3:20  %C1_1_1_12 = select i1 %tmp_11, i32 %C1_1_0, i32 %C1_1_1_9_load_1

ST_19: C1_1_1_3 (214)  [1/1] 0.00ns  loc: Proton/core.cpp:51 (grouped into LUT with out node C1_1_1_8_13)
_ifconv3:21  %C1_1_1_3 = select i1 %tmp_11, i32 %C1_1_1_4_load_1, i32 %C1_1_0

ST_19: C1_1_1_5 (215)  [1/1] 1.37ns  loc: Proton/core.cpp:45 (out node of the LUT)
_ifconv3:22  %C1_1_1_5 = select i1 %tmp_8, i32 %C1_1_1_1, i32 %C1_1_1_11_load_1

ST_19: C1_1_1_6 (216)  [1/1] 1.37ns  loc: Proton/core.cpp:45 (out node of the LUT)
_ifconv3:23  %C1_1_1_6 = select i1 %tmp_8, i32 %C1_1_1_2_11, i32 %C1_1_1_10_load_1

ST_19: C1_1_1_7 (217)  [1/1] 1.37ns  loc: Proton/core.cpp:45 (out node of the LUT)
_ifconv3:24  %C1_1_1_7 = select i1 %tmp_8, i32 %C1_1_1_9_load_1, i32 %C1_1_1_12

ST_19: C1_1_1_8_13 (218)  [1/1] 1.37ns  loc: Proton/core.cpp:45 (out node of the LUT)
_ifconv3:25  %C1_1_1_8_13 = select i1 %tmp_8, i32 %C1_1_1_4_load_1, i32 %C1_1_1_3

ST_19: StgValue_224 (219)  [1/1] 1.57ns  loc: Proton/core.cpp:51
_ifconv3:26  store i32 %C1_1_1_5, i32* %C1_1_1_11

ST_19: StgValue_225 (220)  [1/1] 1.57ns  loc: Proton/core.cpp:51
_ifconv3:27  store i32 %C1_1_1_6, i32* %C1_1_1_10

ST_19: StgValue_226 (221)  [1/1] 1.57ns  loc: Proton/core.cpp:51
_ifconv3:28  store i32 %C1_1_1_7, i32* %C1_1_1_9

ST_19: StgValue_227 (222)  [1/1] 1.57ns  loc: Proton/core.cpp:51
_ifconv3:29  store i32 %C1_1_1_8_13, i32* %C1_1_1_4

ST_19: StgValue_228 (223)  [1/1] 0.00ns  loc: Proton/core.cpp:49
_ifconv3:30  br label %.preheader11


 <State 20>: 1.57ns
ST_20: indvars_iv (231)  [1/1] 0.00ns  loc: Proton/core.cpp:58
.preheader:0  %indvars_iv = phi i3 [ %indvars_iv_next, %7 ], [ 2, %.preheader.preheader ]

ST_20: k_4 (232)  [1/1] 0.00ns
.preheader:1  %k_4 = phi i3 [ %k_8, %7 ], [ 0, %.preheader.preheader ]

ST_20: i4 (233)  [1/1] 0.00ns
.preheader:2  %i4 = phi i2 [ %i_4, %7 ], [ 0, %.preheader.preheader ]

ST_20: exitcond1 (234)  [1/1] 1.36ns  loc: Proton/core.cpp:58
.preheader:3  %exitcond1 = icmp eq i2 %i4, -2

ST_20: empty_14 (235)  [1/1] 0.00ns
.preheader:4  %empty_14 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind

ST_20: i_4 (236)  [1/1] 0.80ns  loc: Proton/core.cpp:58
.preheader:5  %i_4 = add i2 %i4, 1

ST_20: StgValue_235 (237)  [1/1] 0.00ns  loc: Proton/core.cpp:58
.preheader:6  br i1 %exitcond1, label %8, label %5

ST_20: k_8 (239)  [1/1] 0.80ns  loc: Proton/core.cpp:63
:0  %k_8 = add i3 2, %k_4

ST_20: tmp_10 (240)  [1/1] 0.00ns  loc: Proton/core.cpp:58
:1  %tmp_10 = trunc i2 %i4 to i1

ST_20: StgValue_238 (241)  [1/1] 1.57ns  loc: Proton/core.cpp:60
:2  br label %6

ST_20: StgValue_239 (267)  [1/1] 0.00ns  loc: Proton/core.cpp:66
:0  ret void


 <State 21>: 5.13ns
ST_21: k_5 (243)  [1/1] 0.00ns  loc: Proton/core.cpp:63
:0  %k_5 = phi i3 [ %k_4, %5 ], [ %tmp_s, %_ifconv4 ]

ST_21: j3 (244)  [1/1] 0.00ns
:1  %j3 = phi i2 [ 0, %5 ], [ %j_3, %_ifconv4 ]

ST_21: k_5_cast5 (245)  [1/1] 0.00ns  loc: Proton/core.cpp:60
:2  %k_5_cast5 = zext i3 %k_5 to i32

ST_21: exitcond (246)  [1/1] 1.62ns  loc: Proton/core.cpp:60
:3  %exitcond = icmp eq i3 %k_5, %indvars_iv

ST_21: empty_15 (247)  [1/1] 0.00ns
:4  %empty_15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind

ST_21: j_3 (248)  [1/1] 0.80ns  loc: Proton/core.cpp:60
:5  %j_3 = add i2 %j3, 1

ST_21: StgValue_246 (249)  [1/1] 0.00ns  loc: Proton/core.cpp:60
:6  br i1 %exitcond, label %7, label %_ifconv4

ST_21: C1_1_1_4_load (251)  [1/1] 0.00ns  loc: Proton/core.cpp:62
_ifconv4:0  %C1_1_1_4_load = load i32* %C1_1_1_4

ST_21: C1_1_1_9_load (252)  [1/1] 0.00ns  loc: Proton/core.cpp:62
_ifconv4:1  %C1_1_1_9_load = load i32* %C1_1_1_9

ST_21: C1_1_1_10_load (253)  [1/1] 0.00ns  loc: Proton/core.cpp:62
_ifconv4:2  %C1_1_1_10_load = load i32* %C1_1_1_10

ST_21: C1_1_1_11_load (254)  [1/1] 0.00ns  loc: Proton/core.cpp:62
_ifconv4:3  %C1_1_1_11_load = load i32* %C1_1_1_11

ST_21: tmp_12 (255)  [1/1] 0.00ns  loc: Proton/core.cpp:60
_ifconv4:4  %tmp_12 = trunc i2 %j3 to i1

ST_21: C1_load21_phi (256)  [1/1] 0.00ns  loc: Proton/core.cpp:62 (grouped into LUT with out node C1_load_phi)
_ifconv4:5  %C1_load21_phi = select i1 %tmp_12, i32 %C1_1_1_11_load, i32 %C1_1_1_10_load

ST_21: C1_load20_phi (257)  [1/1] 1.37ns  loc: Proton/core.cpp:62 (out node of the LUT)
_ifconv4:6  %C1_load20_phi = select i1 %tmp_12, i32 %C1_1_1_9_load, i32 %C1_1_1_4_load

ST_21: C1_load_phi (258)  [1/1] 1.37ns  loc: Proton/core.cpp:62 (out node of the LUT)
_ifconv4:7  %C1_load_phi = select i1 %tmp_10, i32 %C1_load21_phi, i32 %C1_load20_phi

ST_21: C_addr (259)  [1/1] 0.00ns  loc: Proton/core.cpp:62
_ifconv4:8  %C_addr = getelementptr [4 x i32]* %C, i32 0, i32 %k_5_cast5

ST_21: StgValue_256 (260)  [1/1] 2.39ns  loc: Proton/core.cpp:62
_ifconv4:9  store i32 %C1_load_phi, i32* %C_addr, align 4

ST_21: tmp_s (261)  [1/1] 0.80ns  loc: Proton/core.cpp:63
_ifconv4:10  %tmp_s = add i3 1, %k_5

ST_21: StgValue_258 (262)  [1/1] 0.00ns  loc: Proton/core.cpp:60
_ifconv4:11  br label %6

ST_21: indvars_iv_next (264)  [1/1] 0.80ns  loc: Proton/core.cpp:58
:0  %indvars_iv_next = add i3 %indvars_iv, 2

ST_21: StgValue_260 (265)  [1/1] 0.00ns  loc: Proton/core.cpp:58
:1  br label %.preheader



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', Proton/core.cpp:16) [15]  (1.57 ns)

 <State 2>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('j') with incoming values : ('j', Proton/core.cpp:18) [28]  (1.57 ns)

 <State 3>: 1.37ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', Proton/core.cpp:18) [28]  (0 ns)
	'select' operation ('C1_0_1_8', Proton/core.cpp:20) [41]  (0 ns)
	'select' operation ('C1_0_1_2', Proton/core.cpp:16) [45]  (1.37 ns)

 <State 4>: 1.57ns
The critical path consists of the following:
	'phi' operation ('k', Proton/core.cpp:27) with incoming values : ('tmp', Proton/core.cpp:27) [62]  (0 ns)
	multiplexor before 'phi' operation ('j') with incoming values : ('j', Proton/core.cpp:27) [72]  (1.57 ns)

 <State 5>: 2.39ns
The critical path consists of the following:
	'phi' operation ('k_1', Proton/core.cpp:27) with incoming values : ('tmp', Proton/core.cpp:27) ('tmp_5', Proton/core.cpp:30) [73]  (0 ns)
	'getelementptr' operation ('A_addr', Proton/core.cpp:29) [84]  (0 ns)
	'load' operation ('A1[1][0]', Proton/core.cpp:29) on array 'A' [85]  (2.39 ns)

 <State 6>: 3.76ns
The critical path consists of the following:
	'load' operation ('A1[1][0]', Proton/core.cpp:29) on array 'A' [85]  (2.39 ns)
	'select' operation ('A1[1][1]', Proton/core.cpp:29) [89]  (0 ns)
	'select' operation ('A1[1][1]', Proton/core.cpp:25) [93]  (1.37 ns)

 <State 7>: 1.57ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', Proton/core.cpp:30) [111]  (0 ns)
	multiplexor before 'phi' operation ('j') with incoming values : ('j', Proton/core.cpp:37) [121]  (1.57 ns)

 <State 8>: 2.39ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', Proton/core.cpp:30) ('k', Proton/core.cpp:40) [122]  (0 ns)
	'getelementptr' operation ('A_addr_1', Proton/core.cpp:39) [133]  (0 ns)
	'load' operation ('B1[1][0]', Proton/core.cpp:39) on array 'A' [134]  (2.39 ns)

 <State 9>: 3.76ns
The critical path consists of the following:
	'load' operation ('B1[1][0]', Proton/core.cpp:39) on array 'A' [134]  (2.39 ns)
	'select' operation ('B1[1][1]', Proton/core.cpp:39) [139]  (0 ns)
	'select' operation ('B1[1][1]', Proton/core.cpp:35) [143]  (1.37 ns)

 <State 10>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('j') with incoming values : ('j', Proton/core.cpp:47) [172]  (1.57 ns)

 <State 11>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('k') with incoming values : ('k', Proton/core.cpp:49) [187]  (1.57 ns)

 <State 12>: 2.74ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', Proton/core.cpp:49) [187]  (0 ns)
	'select' operation ('A1_load8_phi', Proton/core.cpp:51) [206]  (1.37 ns)
	'select' operation ('A1_load_phi', Proton/core.cpp:51) [207]  (1.37 ns)

 <State 13>: 6.08ns
The critical path consists of the following:
	'mul' operation ('tmp_1', Proton/core.cpp:51) [209]  (6.08 ns)

 <State 14>: 6.08ns
The critical path consists of the following:
	'mul' operation ('tmp_1', Proton/core.cpp:51) [209]  (6.08 ns)

 <State 15>: 6.08ns
The critical path consists of the following:
	'mul' operation ('tmp_1', Proton/core.cpp:51) [209]  (6.08 ns)

 <State 16>: 6.08ns
The critical path consists of the following:
	'mul' operation ('tmp_1', Proton/core.cpp:51) [209]  (6.08 ns)

 <State 17>: 6.08ns
The critical path consists of the following:
	'mul' operation ('tmp_1', Proton/core.cpp:51) [209]  (6.08 ns)

 <State 18>: 6.08ns
The critical path consists of the following:
	'mul' operation ('tmp_1', Proton/core.cpp:51) [209]  (6.08 ns)

 <State 19>: 6.75ns
The critical path consists of the following:
	'load' operation ('C1_1_1_4_load_1') on local variable 'C1[1][1]' [193]  (0 ns)
	'select' operation ('C1_load_125_phi', Proton/core.cpp:51) [202]  (1.37 ns)
	'select' operation ('C1_load_1_phi', Proton/core.cpp:51) [203]  (0 ns)
	'add' operation ('C1[1][0]', Proton/core.cpp:51) [210]  (2.44 ns)
	'select' operation ('C1[1][1]', Proton/core.cpp:51) [211]  (0 ns)
	'select' operation ('C1[1][1]', Proton/core.cpp:45) [215]  (1.37 ns)
	'store' operation (Proton/core.cpp:51) of variable 'C1[1][1]', Proton/core.cpp:45 on local variable 'C1[1][1]' [219]  (1.57 ns)

 <State 20>: 1.57ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', Proton/core.cpp:63) [232]  (0 ns)
	multiplexor before 'phi' operation ('k_5', Proton/core.cpp:63) with incoming values : ('k', Proton/core.cpp:63) ('tmp_s', Proton/core.cpp:63) [243]  (1.57 ns)

 <State 21>: 5.13ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', Proton/core.cpp:60) [244]  (0 ns)
	'select' operation ('C1_load20_phi', Proton/core.cpp:62) [257]  (1.37 ns)
	'select' operation ('C1_load_phi', Proton/core.cpp:62) [258]  (1.37 ns)
	'store' operation (Proton/core.cpp:62) of variable 'C1_load_phi', Proton/core.cpp:62 on array 'C' [260]  (2.39 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
